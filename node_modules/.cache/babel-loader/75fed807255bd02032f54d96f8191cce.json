{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport { transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport i18next from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TableTransaction = _ref => {\n  let {\n    transactions,\n    getDetailTransaction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-transaction-table-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-transaction-table-row titleTableTransactions\",\n      children: transactionTableTitles.map(titulo => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [transactionTableTitles, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-transaction-table-col-sm-4\",\n          children: [i18next.t(titulo), \" \"]\n        }, titulo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = TableTransaction;\n\nconst mapStateToProps = state => ({\n  transactions: transactionsSelector(state).transactions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDetailTransaction: id => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTransaction\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx"],"names":["React","connect","actions","detailTransaction","transactionsSelector","transactionTableTitles","i18next","TableTransaction","transactions","getDetailTransaction","map","titulo","t","mapStateToProps","state","mapDispatchToProps","dispatch","id","getDetailTransactionRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAO,IAAIC,iBAApB,QAA6C,4BAA7C;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAIA,SAAuBC,sBAAvB,QAAqD,0BAArD;AACA,OAAO,yBAAP;AAEA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,QAGE;AAAA,MAHD;AAC/BC,IAAAA,YAD+B;AAE/BC,IAAAA;AAF+B,GAGC;AAChC,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA,gBACGJ,sBAAsB,CAACK,GAAvB,CAA4BC,MAAD,iBAC1B;AAAA,mBAEEN,sBAFF,eAIC;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,qBACEC,OAAO,CAACM,CAAR,CAAUD,MAAV,CADF,EACqB,GADrB;AAAA,WAA2DA,MAA3D;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD,CA/DM;KAAMJ,gB;;AAiEb,MAAMM,eAAe,GAAIC,KAAD,KAAuB;AAC7CN,EAAAA,YAAY,EAAEJ,oBAAoB,CAACU,KAAD,CAApB,CAA4BN;AADG,CAAvB,CAAxB;;AAIA,MAAMO,kBAAkB,GAAIC,QAAD,KAA4B;AACrDP,EAAAA,oBAAoB,EAAGQ,EAAD,IAAgB;AACpCD,IAAAA,QAAQ,CAACb,iBAAiB,CAACe,2BAAlB,CAA8CD,EAA9C,CAAD,CAAR;AACD;AAHoD,CAA5B,CAA3B;;AAKA,eAAehB,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport { TransactionResponseTypeResult } from \"sagas/types/transactions\";\nimport { AppDispatch, RootState } from \"store\";\nimport TreePoints from \"../../../assets/transaction/TreePoints.svg\";\nimport { DATE_FORMATS, transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport { TableTransactionPropsTypes } from \"./types\";\nimport i18next from \"i18next\";\n\nexport const TableTransaction = ({\n  transactions,\n  getDetailTransaction,\n}: TableTransactionPropsTypes) => {\n  return (\n    <div className=\"container-transaction-table-fluid\">\n      <div className=\"container-transaction-table-row titleTableTransactions\">\n        {transactionTableTitles.map((titulo: string) => (\n          <>\n          {\n            transactionTableTitles\n          }\n           <div className=\"container-transaction-table-col-sm-4\" key={titulo}>\n            {i18next.t(titulo)}{\" \"}\n          </div>\n          </>\n         \n        ))}\n      </div>\n      {/* <table className=\"titleTableTransactions\">\n        <thead>\n          <tr>\n            <td></td>\n            {transactionTableTitles.map((titulo: string) => (\n              <td key={titulo}>{i18next.t(titulo)}</td>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.length > 0 &&\n            transactions.map((data: TransactionResponseTypeResult) => (\n              <tr\n                id={`${data.transaction.id}`}\n                key={`${data.transaction.id}`}\n                onClick={() => getDetailTransaction(data.transaction.id)}\n              >\n                <td>\n                  <img\n                    className=\"img-transaction\"\n                    src={TreePoints}\n                    alt=\"TreePoints\"\n                  />\n                </td>\n                <td> {data.transaction.transactionCode} </td>\n                <td> {data.transaction.externalPickerId}</td>\n                <td>\n                  {moment(\n                    data.transaction.maxDeliveryDateTime.substring(0, 10),\n                    DATE_FORMATS.shortISODate\n                  ).format(DATE_FORMATS.shortDate)}\n                  {data.transaction.inAlert && (\n                    <div className=\"admin-table-alerta\">\n                      {i18next.t(\"transactionTable:label.table.inAlert\")}\n                    </div>\n                  )}\n                </td>\n                <td> {data.transaction.state.name}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table> */}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  transactions: transactionsSelector(state).transactions,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  getDetailTransaction: (id: string) => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n"]},"metadata":{},"sourceType":"module"}