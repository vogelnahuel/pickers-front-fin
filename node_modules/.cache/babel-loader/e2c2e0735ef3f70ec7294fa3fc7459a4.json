{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/preliquidation/filter/PreliquidationFilterContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport * as yup from \"yup\";\nimport i18next from \"i18next\";\nimport { PreliquidationFilter } from \"./PreliquidationFilter\";\nimport { actions as preliquidationActions, preliquidationSelector as preliquidationSelectors } from \"reducers/preliquidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreliquidationFilterContainer = props => {\n  const search = values => {\n    props.resetAllSelected();\n    props.getPreliquidations({ ...values,\n      ...props.filtersExtra\n    });\n    props.setPreliquidationFilters(values);\n  };\n\n  const validationSchema = yup.object({\n    presettlementId: yup.string().min(5, i18next.t(\"filterPreliquidation:error.input.presettlmentIdLength\")).matches(VALIDATION_REGEX.regNumber, i18next.t(\"global:error.input.numbersOnly\")),\n    fiscalNumber: yup.string().min(11, i18next.t(\"filterPreliquidation:error.input.fiscalNumberLength\")).matches(VALIDATION_REGEX.regNumber, i18next.t(\"global:error.input.numbersOnly\"))\n  });\n  return /*#__PURE__*/_jsxDEV(PreliquidationFilter, { ...props,\n    onSubmit: search,\n    validationSchema: validationSchema\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PreliquidationFilterContainer;\n\nconst mapStateToProps = state => ({\n  filters: preliquidationSelectors(state).filters,\n  filtersExtra: preliquidationSelectors(state).filtersExtra\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPreliquidations: params => {\n    dispatch(preliquidationActions.getPreliquidationsRequest(params));\n  },\n  setPreliquidationFilters: filters => {\n    dispatch(preliquidationActions.setPreliquidationFilters(filters));\n  },\n  reset: () => {\n    dispatch(preliquidationActions.reset());\n  },\n  resetAllSelected: () => {\n    dispatch(preliquidationActions.resetAllSelected());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PreliquidationFilterContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"PreliquidationFilterContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/preliquidation/filter/PreliquidationFilterContainer.tsx"],"names":["React","connect","VALIDATION_REGEX","yup","i18next","PreliquidationFilter","actions","preliquidationActions","preliquidationSelector","preliquidationSelectors","PreliquidationFilterContainer","props","search","values","resetAllSelected","getPreliquidations","filtersExtra","setPreliquidationFilters","validationSchema","object","presettlementId","string","min","t","matches","regNumber","fiscalNumber","mapStateToProps","state","filters","mapDispatchToProps","dispatch","params","getPreliquidationsRequest","reset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SACEC,OAAO,IAAIC,qBADb,EAEEC,sBAAsB,IAAIC,uBAF5B,QAGO,yBAHP;;;AAWA,MAAMC,6BAEL,GAAIC,KAAD,IAAW;AAEb,QAAMC,MAAM,GAAIC,MAAD,IAAuC;AACpDF,IAAAA,KAAK,CAACG,gBAAN;AACAH,IAAAA,KAAK,CAACI,kBAAN,CAAyB,EACvB,GAAGF,MADoB;AAEvB,SAAGF,KAAK,CAACK;AAFc,KAAzB;AAIAL,IAAAA,KAAK,CAACM,wBAAN,CAA+BJ,MAA/B;AACD,GAPD;;AASA,QAAMK,gBAAoE,GACxEf,GAAG,CAACgB,MAAJ,CAAW;AACTC,IAAAA,eAAe,EAAEjB,GAAG,CACjBkB,MADc,GAEdC,GAFc,CAGb,CAHa,EAIblB,OAAO,CAACmB,CAAR,CAAU,uDAAV,CAJa,EAMdC,OANc,CAObtB,gBAAgB,CAACuB,SAPJ,EAQbrB,OAAO,CAACmB,CAAR,CAAU,gCAAV,CARa,CADR;AAWTG,IAAAA,YAAY,EAAEvB,GAAG,CACdkB,MADW,GAEXC,GAFW,CAGV,EAHU,EAIVlB,OAAO,CAACmB,CAAR,CAAU,qDAAV,CAJU,EAMXC,OANW,CAOVtB,gBAAgB,CAACuB,SAPP,EAQVrB,OAAO,CAACmB,CAAR,CAAU,gCAAV,CARU;AAXL,GAAX,CADF;AAwBA,sBACE,QAAC,oBAAD,OACMZ,KADN;AAEE,IAAA,QAAQ,EAAEC,MAFZ;AAGE,IAAA,gBAAgB,EAAEM;AAHpB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5CD;;KAAMR,6B;;AA8CN,MAAMiB,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,OAAO,EAAEpB,uBAAuB,CAACmB,KAAD,CAAvB,CAA+BC,OADK;AAE7Cb,EAAAA,YAAY,EAAEP,uBAAuB,CAACmB,KAAD,CAAvB,CAA+BZ;AAFA,CAAvB,CAAxB;;AAKA,MAAMc,kBAAkB,GAAIC,QAAD,KAA4B;AACrDhB,EAAAA,kBAAkB,EAAGiB,MAAD,IAAgD;AAClED,IAAAA,QAAQ,CAACxB,qBAAqB,CAAC0B,yBAAtB,CAAgDD,MAAhD,CAAD,CAAR;AACD,GAHoD;AAIrDf,EAAAA,wBAAwB,EAAGY,OAAD,IAAwC;AAChEE,IAAAA,QAAQ,CAACxB,qBAAqB,CAACU,wBAAtB,CAA+CY,OAA/C,CAAD,CAAR;AACD,GANoD;AAOrDK,EAAAA,KAAK,EAAE,MAAM;AACXH,IAAAA,QAAQ,CAACxB,qBAAqB,CAAC2B,KAAtB,EAAD,CAAR;AACD,GAToD;AAUrDpB,EAAAA,gBAAgB,EAAE,MAAM;AACtBiB,IAAAA,QAAQ,CAACxB,qBAAqB,CAACO,gBAAtB,EAAD,CAAR;AACD;AAZoD,CAA5B,CAA3B;;AAeA,eAAeb,OAAO,CACpB0B,eADoB,EAEpBG,kBAFoB,CAAP,CAGbpB,6BAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport * as yup from \"yup\";\nimport { AppDispatch, RootState } from \"store\";\nimport i18next from \"i18next\";\nimport { PreliquidationFilter } from \"./PreliquidationFilter\";\nimport {\n  actions as preliquidationActions,\n  preliquidationSelector as preliquidationSelectors,\n} from \"reducers/preliquidation\";\nimport { PreliquidationParamsMiddlewareType } from \"sagas/types/preliquidation\";\nimport {\n  filterPreliquidationValidationSchema,\n  PreliquidationFilterContainerPropsType,\n  PreliquidationFiltersType,\n} from \"./types\";\n\nconst PreliquidationFilterContainer: React.FC<\n  PreliquidationFilterContainerPropsType\n> = (props) => {\n\n  const search = (values: PreliquidationFiltersType) => {\n    props.resetAllSelected();\n    props.getPreliquidations({\n      ...values,\n      ...props.filtersExtra,\n    });\n    props.setPreliquidationFilters(values);\n  };\n\n  const validationSchema: yup.SchemaOf<filterPreliquidationValidationSchema> =\n    yup.object({\n      presettlementId: yup\n        .string()\n        .min(\n          5,\n          i18next.t(\"filterPreliquidation:error.input.presettlmentIdLength\")\n        )\n        .matches(\n          VALIDATION_REGEX.regNumber,\n          i18next.t(\"global:error.input.numbersOnly\")\n        ),\n      fiscalNumber: yup\n        .string()\n        .min(\n          11,\n          i18next.t(\"filterPreliquidation:error.input.fiscalNumberLength\")\n        )\n        .matches(\n          VALIDATION_REGEX.regNumber,\n          i18next.t(\"global:error.input.numbersOnly\")\n        ),\n    });\n\n  return (\n    <PreliquidationFilter\n      {...props}\n      onSubmit={search}\n      validationSchema={validationSchema}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  filters: preliquidationSelectors(state).filters,\n  filtersExtra: preliquidationSelectors(state).filtersExtra,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  getPreliquidations: (params: PreliquidationParamsMiddlewareType) => {\n    dispatch(preliquidationActions.getPreliquidationsRequest(params));\n  },\n  setPreliquidationFilters: (filters: PreliquidationFiltersType) => {\n    dispatch(preliquidationActions.setPreliquidationFilters(filters));\n  },\n  reset: () => {\n    dispatch(preliquidationActions.reset());\n  },\n  resetAllSelected: () => {\n    dispatch(preliquidationActions.resetAllSelected());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PreliquidationFilterContainer);\n"]},"metadata":{},"sourceType":"module"}