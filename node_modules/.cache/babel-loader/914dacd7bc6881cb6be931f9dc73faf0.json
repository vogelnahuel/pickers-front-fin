{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/pdfController/PdfController.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useImperativeHandle, forwardRef } from \"react\";\nimport i18next from \"i18next\";\nimport Button from \"component/button/Button\";\nimport uploadCloud from \"../../assets/upload_cloud.svg\";\nimport uploadArrow from \"../../assets/upload_arrow.svg\";\nimport uploadError from \"../../assets/upload_error.svg\";\nimport \"./pdfController.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfController = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    children,\n    fileUploaded,\n    showError,\n    errorMessage,\n    title,\n    buttonText,\n    disabled,\n    loading,\n    goToPreviousFile,\n    fileHandler\n  } = _ref;\n  const dropRef = useRef(null);\n  const fileRef = useRef(null);\n  const [dragging, setDragging] = useState(false);\n  const dragCounter = useRef(0);\n\n  const openFileReader = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    if (fileRef.current) fileRef.current.click();\n  };\n\n  const onFileChange = event => {\n    const target = event.target;\n    const file = target.files[0];\n    if (!file) return;\n    target.value = \"\";\n    fileHandler(file);\n  }; // Evitar la funcionalidad por defecto. Abre el dropped file\n\n\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = e => {\n    var _e$dataTransfer, _e$dataTransfer2, _e$dataTransfer2$item;\n\n    e.preventDefault();\n    e.stopPropagation(); // Si dentro del contenedor de \"Drag and Drop\" hay muchos childs,\n    // se va a disparar este evento por cada uno de ellos.\n\n    dragCounter.current = dragCounter.current + 1; // En caso que el evento contenga algun archivo\n\n    if (e !== null && e !== void 0 && (_e$dataTransfer = e.dataTransfer) !== null && _e$dataTransfer !== void 0 && _e$dataTransfer.items && ((_e$dataTransfer2 = e.dataTransfer) === null || _e$dataTransfer2 === void 0 ? void 0 : (_e$dataTransfer2$item = _e$dataTransfer2.items) === null || _e$dataTransfer2$item === void 0 ? void 0 : _e$dataTransfer2$item.length) > 0) {\n      setDragging(true);\n    }\n  };\n\n  const handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter.current = dragCounter.current - 1; // Solo se suelta el draggging cuando se sale del ultimo elemento\n    // ya que dicho container puede tener muchos child y dicho evento\n    // es lanzado cada vez que sale de cada uno de los child.\n\n    if (dragCounter.current === 0) setDragging(false);\n  };\n\n  const handleDrop = e => {\n    var _e$dataTransfer3;\n\n    e.preventDefault();\n    e.stopPropagation();\n    setDragging(false);\n\n    if (e !== null && e !== void 0 && (_e$dataTransfer3 = e.dataTransfer) !== null && _e$dataTransfer3 !== void 0 && _e$dataTransfer3.files && (e === null || e === void 0 ? void 0 : e.dataTransfer.files.length) > 0) {\n      dragCounter.current = 0;\n      fileHandler(e.dataTransfer.files[0]);\n      e.dataTransfer.clearData();\n    }\n  };\n\n  const hasError = () => showError && !dragging && !loading;\n\n  const showFile = () => fileUploaded && !dragging && !loading && !showError;\n\n  useImperativeHandle(ref, () => ({\n    triggerOnChange: () => openFileReader()\n  }));\n  useEffect(() => {\n    const div = dropRef.current;\n    if (!div || disabled) return;\n    div.addEventListener(\"dragenter\", handleDragIn);\n    div.addEventListener(\"dragleave\", handleDragOut);\n    div.addEventListener(\"dragover\", handleDrag);\n    div.addEventListener(\"drop\", handleDrop);\n    return () => {\n      div.removeEventListener(\"dragenter\", handleDragIn);\n      div.removeEventListener(\"dragleave\", handleDragOut);\n      div.removeEventListener(\"dragover\", handleDrag);\n      div.removeEventListener(\"drop\", handleDrop);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disabled]);\n  const rootContainerClasses = [\"pdf-root-container\", showFile() && \"pdf-root-container-border\"].join(\" \");\n  const containerClasses = [\"pdf-container-idle\", dragging && \"pdf-container-dragging\", loading && \"pdf-container-loading\", hasError() && \"pdf-container-error\", showFile() && \"pdf-container-hidden\"].join(\" \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootContainerClasses,\n    children: [showFile() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-children-container\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropRef,\n      className: containerClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-icon-container\",\n        children: [hasError() ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pdf-upload-error-icon\",\n          src: uploadError,\n          alt: \"upload-error-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-upload-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pdf-upload-cloud\",\n            src: uploadCloud,\n            alt: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pdf-upload-arrow\",\n            src: uploadArrow,\n            alt: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pdf-title\",\n          children: dragging ? i18next.t(\"component:label.pdfController.dragging\") : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-content\",\n        children: [fileUploaded && showError ? /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pdf-button\",\n          disabled: disabled,\n          onClick: () => goToPreviousFile && goToPreviousFile(),\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pdf-button\",\n          disabled: disabled,\n          onClick: openFileReader,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pdf-message\",\n          children: i18next.t(\"component:label.pdfController.instruction\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), hasError() && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pdf-error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileRef,\n      className: \"pdf-hidden\",\n      accept: \".pdf\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, this);\n}, \"ZliSbbBJ3Tijg6EQpweFM0upKYU=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = PdfController;\nexport default PdfController;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PdfController$forwardRef\");\n$RefreshReg$(_c2, \"PdfController\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/pdfController/PdfController.tsx"],"names":["useRef","useState","useEffect","useImperativeHandle","forwardRef","i18next","Button","PdfController","ref","children","fileUploaded","showError","errorMessage","title","buttonText","disabled","loading","goToPreviousFile","fileHandler","dropRef","fileRef","dragging","setDragging","dragCounter","openFileReader","e","preventDefault","stopPropagation","current","click","onFileChange","event","target","file","files","value","handleDrag","handleDragIn","dataTransfer","items","length","handleDragOut","handleDrop","clearData","hasError","showFile","triggerOnChange","div","addEventListener","removeEventListener","rootContainerClasses","join","containerClasses","uploadError","uploadCloud","uploadArrow","t"],"mappings":"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","sourcesContent":["import {\n  useRef,\n  useState,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport i18next from \"i18next\";\nimport Button from \"component/button/Button\";\nimport uploadCloud from \"../../assets/upload_cloud.svg\";\nimport uploadArrow from \"../../assets/upload_arrow.svg\";\nimport uploadError from \"../../assets/upload_error.svg\";\nimport \"./pdfController.scss\";\nimport { PdfControllerProps } from \"./types\";\n\nconst PdfController = forwardRef(\n  (\n    {\n      children,\n      fileUploaded,\n      showError,\n      errorMessage,\n      title,\n      buttonText,\n      disabled,\n      loading,\n      goToPreviousFile,\n      fileHandler,\n    }: PdfControllerProps,\n    ref\n  ) => {\n    const dropRef = useRef<HTMLDivElement>(null);\n    const fileRef = useRef<HTMLInputElement>(null);\n    const [dragging, setDragging] = useState(false);\n    const dragCounter = useRef<number>(0);\n\n    const openFileReader = (\n      e?: React.MouseEvent<HTMLButtonElement> | undefined\n    ): void => {\n      e?.preventDefault();\n      e?.stopPropagation();\n      if (fileRef.current) fileRef.current.click();\n    };\n\n    const onFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const target = event.target;\n      const file: File = (target.files as FileList)[0];\n\n      if (!file) return;\n\n      target.value = \"\";\n      fileHandler(file);\n    };\n\n    // Evitar la funcionalidad por defecto. Abre el dropped file\n    const handleDrag = (e: DragEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    const handleDragIn = (e: DragEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      // Si dentro del contenedor de \"Drag and Drop\" hay muchos childs,\n      // se va a disparar este evento por cada uno de ellos.\n      dragCounter.current = dragCounter.current + 1;\n\n      // En caso que el evento contenga algun archivo\n      if (e?.dataTransfer?.items && e.dataTransfer?.items?.length > 0) {\n        setDragging(true);\n      }\n    };\n    const handleDragOut = (e: DragEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      dragCounter.current = dragCounter.current - 1;\n\n      // Solo se suelta el draggging cuando se sale del ultimo elemento\n      // ya que dicho container puede tener muchos child y dicho evento\n      // es lanzado cada vez que sale de cada uno de los child.\n      if (dragCounter.current === 0) setDragging(false);\n    };\n\n    const handleDrop = (e: DragEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setDragging(false);\n      if (e?.dataTransfer?.files && e?.dataTransfer.files.length > 0) {\n        dragCounter.current = 0;\n        fileHandler(e.dataTransfer.files[0]);\n        e.dataTransfer.clearData();\n      }\n    };\n\n    const hasError = () => showError && !dragging && !loading;\n    const showFile = () => fileUploaded && !dragging && !loading && !showError;\n\n    useImperativeHandle(ref, () => ({\n      triggerOnChange: () => openFileReader(),\n    }));\n\n    useEffect(() => {\n      const div = dropRef.current;\n\n      if (!div || disabled) return;\n\n      div.addEventListener(\"dragenter\", handleDragIn);\n      div.addEventListener(\"dragleave\", handleDragOut);\n      div.addEventListener(\"dragover\", handleDrag);\n      div.addEventListener(\"drop\", handleDrop);\n\n      return () => {\n        div.removeEventListener(\"dragenter\", handleDragIn);\n        div.removeEventListener(\"dragleave\", handleDragOut);\n        div.removeEventListener(\"dragover\", handleDrag);\n        div.removeEventListener(\"drop\", handleDrop);\n      };\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [disabled]);\n\n    const rootContainerClasses = [\n      \"pdf-root-container\",\n      showFile() && \"pdf-root-container-border\",\n    ].join(\" \");\n\n    const containerClasses = [\n      \"pdf-container-idle\",\n      dragging && \"pdf-container-dragging\",\n      loading && \"pdf-container-loading\",\n      hasError() && \"pdf-container-error\",\n      showFile() && \"pdf-container-hidden\",\n    ].join(\" \");\n\n    return (\n      <div className={rootContainerClasses}>\n        {showFile() && <div className=\"pdf-children-container\">{children}</div>}\n        <div ref={dropRef} className={containerClasses}>\n          <div className=\"pdf-icon-container\">\n            {hasError() ? (\n              <img\n                className=\"pdf-upload-error-icon\"\n                src={uploadError}\n                alt=\"upload-error-icon\"\n              />\n            ) : (\n              <div className=\"pdf-upload-icon\">\n                <img\n                  className=\"pdf-upload-cloud\"\n                  src={uploadCloud}\n                  alt=\"upload-icon\"\n                />\n                <img\n                  className=\"pdf-upload-arrow\"\n                  src={uploadArrow}\n                  alt=\"upload-icon\"\n                />\n              </div>\n            )}\n            <p className=\"pdf-title\">\n              {dragging\n                ? i18next.t(\"component:label.pdfController.dragging\")\n                : title}\n            </p>\n          </div>\n          <div className=\"pdf-content\">\n            {fileUploaded && showError ? (\n              <Button\n                className=\"pdf-button\"\n                disabled={disabled}\n                onClick={() => goToPreviousFile && goToPreviousFile()}\n              >\n                {buttonText}\n              </Button>\n            ) : (\n              <Button\n                className=\"pdf-button\"\n                disabled={disabled}\n                onClick={openFileReader}\n              >\n                {buttonText}\n              </Button>\n            )}\n            <p className=\"pdf-message\">\n              {i18next.t(\"component:label.pdfController.instruction\")}\n            </p>\n          </div>\n          {loading && (\n            <div className=\"pdf-loading-container\">\n              <div className=\"pdf-loading-bar\"></div>\n            </div>\n          )}\n        </div>\n        {hasError() && <p className=\"pdf-error-message\">{errorMessage}</p>}\n\n        <input\n          type=\"file\"\n          ref={fileRef}\n          className=\"pdf-hidden\"\n          accept=\".pdf\"\n          onChange={onFileChange}\n        />\n      </div>\n    );\n  }\n);\n\nexport default PdfController;\n"]},"metadata":{},"sourceType":"module"}