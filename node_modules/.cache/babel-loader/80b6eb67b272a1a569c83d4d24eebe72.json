{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/preliquidation/filter/PreliquidationFilterContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport * as yup from \"yup\";\nimport i18next from \"i18next\";\nimport { PreliquidationFilter } from \"./PreliquidationFilter\";\nimport { actions as preliquidationActions, preliquidationSelector as preliquidationSelectors } from \"reducers/preliquidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreliquidationFilterContainer = props => {\n  const search = values => {\n    props.getPreliquidations({ ...values,\n      ...props.filtersExtra\n    });\n    props.setPreliquidationFilters(values);\n  };\n\n  const validationSchema = yup.object({\n    presettlmentId: yup.string().min(5, i18next.t(\"Ingresá un número de 5 o 9 dígitos\")).matches(VALIDATION_REGEX.regNumber, i18next.t(\"global:error.input.specialCharacters\")),\n    fiscalNumber: yup.string().min(11, i18next.t(\"Ingresá un número de  11 dígitos\")).matches(VALIDATION_REGEX.regNumber, i18next.t(\"global:error.input.specialCharacters\"))\n  });\n  return /*#__PURE__*/_jsxDEV(PreliquidationFilter, { ...props,\n    onSubmit: search,\n    validationSchema: validationSchema\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PreliquidationFilterContainer;\n\nconst mapStateToProps = state => ({\n  filters: preliquidationSelectors(state).filters,\n  filtersExtra: preliquidationSelectors(state).filtersExtra\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPreliquidations: params => {\n    dispatch(preliquidationActions.getPreliquidationsRequest(params));\n  },\n  setPreliquidationFilters: filters => {\n    dispatch(preliquidationActions.setPreliquidationFilters(filters));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PreliquidationFilterContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"PreliquidationFilterContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/preliquidation/filter/PreliquidationFilterContainer.tsx"],"names":["React","connect","VALIDATION_REGEX","yup","i18next","PreliquidationFilter","actions","preliquidationActions","preliquidationSelector","preliquidationSelectors","PreliquidationFilterContainer","props","search","values","getPreliquidations","filtersExtra","setPreliquidationFilters","validationSchema","object","presettlmentId","string","min","t","matches","regNumber","fiscalNumber","mapStateToProps","state","filters","mapDispatchToProps","dispatch","params","getPreliquidationsRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SACIC,OAAO,IAAIC,qBADf,EAEIC,sBAAsB,IAAIC,uBAF9B,QAGS,yBAHT;;;AAOA,MAAMC,6BAA+E,GAAIC,KAAD,IAAW;AAInG,QAAMC,MAAM,GAAIC,MAAD,IAAuC;AAEpDF,IAAAA,KAAK,CAACG,kBAAN,CAAyB,EACvB,GAAGD,MADoB;AAEvB,SAAGF,KAAK,CAACI;AAFc,KAAzB;AAIEJ,IAAAA,KAAK,CAACK,wBAAN,CAA+BH,MAA/B;AACD,GAPH;;AASE,QAAMI,gBAAoE,GACxEd,GAAG,CAACe,MAAJ,CAAW;AACTC,IAAAA,cAAc,EAAEhB,GAAG,CAChBiB,MADa,GAEbC,GAFa,CAET,CAFS,EAEPjB,OAAO,CAACkB,CAAR,CAAU,oCAAV,CAFO,EAGbC,OAHa,CAIZrB,gBAAgB,CAACsB,SAJL,EAKZpB,OAAO,CAACkB,CAAR,CAAU,sCAAV,CALY,CADP;AAQPG,IAAAA,YAAY,EAAEtB,GAAG,CAChBiB,MADa,GAEbC,GAFa,CAET,EAFS,EAENjB,OAAO,CAACkB,CAAR,CAAU,kCAAV,CAFM,EAGbC,OAHa,CAIZrB,gBAAgB,CAACsB,SAJL,EAKZpB,OAAO,CAACkB,CAAR,CAAU,sCAAV,CALY;AARP,GAAX,CADF;AAmBA,sBACE,QAAC,oBAAD,OACMX,KADN;AAEE,IAAA,QAAQ,EAAEC,MAFZ;AAGE,IAAA,gBAAgB,EAAEK;AAHpB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvCD;;KAAMP,6B;;AAyCN,MAAMgB,eAAe,GAAIC,KAAD,KAAuB;AACzCC,EAAAA,OAAO,EAAEnB,uBAAuB,CAACkB,KAAD,CAAvB,CAA+BC,OADC;AAEzCb,EAAAA,YAAY,EAAEN,uBAAuB,CAACkB,KAAD,CAAvB,CAA+BZ;AAFJ,CAAvB,CAAxB;;AAKA,MAAMc,kBAAkB,GAAIC,QAAD,KAA4B;AAEvDhB,EAAAA,kBAAkB,EAAGiB,MAAD,IAAgD;AAClED,IAAAA,QAAQ,CAACvB,qBAAqB,CAACyB,yBAAtB,CAAgDD,MAAhD,CAAD,CAAR;AACD,GAJsD;AAKvDf,EAAAA,wBAAwB,EAAGY,OAAD,IAAwC;AAC9DE,IAAAA,QAAQ,CAACvB,qBAAqB,CAACS,wBAAtB,CAA+CY,OAA/C,CAAD,CAAR;AACH;AAPsD,CAA5B,CAA3B;;AAUA,eAAe3B,OAAO,CACpByB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbnB,6BAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport * as yup from \"yup\";\nimport { AppDispatch, RootState } from \"store\";\nimport i18next from \"i18next\";\nimport { PreliquidationFilter } from \"./PreliquidationFilter\";\nimport {\n    actions as preliquidationActions,\n    preliquidationSelector as preliquidationSelectors,\n  } from \"reducers/preliquidation\";\nimport { PreliquidationParamsMiddlewareType } from \"sagas/types/preliquidation\";\nimport { filterPreliquidationValidationSchema, PreliquidationFilterContainerPropsType, PreliquidationFiltersType } from \"./types\";\n\nconst PreliquidationFilterContainer: React.FC<PreliquidationFilterContainerPropsType> = (props) => {\n\n\n\nconst search = (values: PreliquidationFiltersType) => {\n \n  props.getPreliquidations({\n    ...values,\n    ...props.filtersExtra,\n  });\n    props.setPreliquidationFilters(values);\n  };\n\n  const validationSchema: yup.SchemaOf<filterPreliquidationValidationSchema> =\n    yup.object({\n      presettlmentId: yup\n        .string()\n        .min(5,i18next.t(\"Ingresá un número de 5 o 9 dígitos\"))\n        .matches(\n          VALIDATION_REGEX.regNumber,\n          i18next.t(\"global:error.input.specialCharacters\")\n        ),\n        fiscalNumber: yup\n        .string()\n        .min(11,i18next.t(\"Ingresá un número de  11 dígitos\"))\n        .matches(\n          VALIDATION_REGEX.regNumber,\n          i18next.t(\"global:error.input.specialCharacters\")\n        ),\n   \n    });\n\n  return (\n    <PreliquidationFilter\n      {...props}\n      onSubmit={search}\n      validationSchema={validationSchema}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n      filters: preliquidationSelectors(state).filters,\n      filtersExtra: preliquidationSelectors(state).filtersExtra,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n\ngetPreliquidations: (params: PreliquidationParamsMiddlewareType) => {\n  dispatch(preliquidationActions.getPreliquidationsRequest(params));\n},\nsetPreliquidationFilters: (filters: PreliquidationFiltersType) => {\n    dispatch(preliquidationActions.setPreliquidationFilters(filters))\n}\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PreliquidationFilterContainer);"]},"metadata":{},"sourceType":"module"}