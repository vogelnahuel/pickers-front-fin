{"ast":null,"code":"export var setPrototypeOf = Object.setPrototypeOf || ({\n  __proto__: []\n} instanceof Array ? setProtoOf : mixinProperties);\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction setProtoOf(obj, proto) {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction mixinProperties(obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["../src/polyfill.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,cAAc,GACzB,MAAM,CAAC,cAAP,KAA0B;AAAE,EAAA,SAAS,EAAE;AAAb,aAA6B,KAA7B,GAAqC,UAArC,GAAkD,eAA5E,CADK;AAGP;;AAEG;AACH;;AACA,SAAS,UAAT,CAAoD,GAApD,EAAkE,KAAlE,EAA+E;AAC7E;AACA,EAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,SAAO,GAAP;AACD;AAED;;AAEG;AACH;;;AACA,SAAS,eAAT,CAAyD,GAAzD,EAAuE,KAAvE,EAAoF;AAClF,OAAK,IAAM,IAAX,IAAmB,KAAnB,EAA0B;AACxB,QAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,IAA1C,CAAL,EAAsD;AACpD;AACA,MAAA,GAAG,CAAC,IAAD,CAAH,GAAY,KAAK,CAAC,IAAD,CAAjB;AACD;AACF;;AAED,SAAO,GAAP;AACD","sourcesContent":["export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}