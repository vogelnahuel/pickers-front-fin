{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/StatesHistory/StateHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport \"./StateHistory.scss\";\nimport { Link } from \"react-router-dom\";\nimport Cancel from \"../../assets/transaction/Cancel.svg\";\nimport Okey from \"../../assets/transaction/Okey.svg\";\nimport classNames from \"classnames\";\nimport i18next from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function StateHistory(_ref) {\n  _s();\n\n  let {\n    history,\n    cancelStatus,\n    linkableStatus,\n    title,\n    showMetadata,\n    transaccion\n  } = _ref;\n  const [expandedId, setExpandedId] = useState(null);\n  const [firstUpdate, setFirstUpdate] = useState(0);\n  const itemsRef = useRef([]);\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, history.length);\n    if (itemsRef.current.length > 0) setFirstUpdate(prev => prev + 1);\n  }, [history]);\n\n  const onExpandHandler = (stateId, i) => {\n    const expandable = isExpandable(i);\n    if (!expandable) return;\n    if (stateId === expandedId) setExpandedId(null);else setExpandedId(stateId);\n  };\n\n  const isExpandable = useCallback(i => {\n    const paragraph = getElement(i);\n    const lineHeight = 19;\n    if (paragraph) return paragraph.scrollHeight > 2 * lineHeight;\n    return false;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [history, firstUpdate]);\n\n  const getElement = i => {\n    const elem = itemsRef.current[i];\n\n    if (elem) {\n      const child = elem.children[0];\n      if (child) return child;\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [title && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"modal-history-h3\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"modal-history-separate-option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-container\",\n      children: history.map((state, i) => {\n        var _state$metadata, _state$metadata2;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: transaccion ? \"state-container transaction\" : \"state-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            alt: \"state\",\n            src: cancelStatus !== null && cancelStatus !== void 0 && cancelStatus.includes(state.reasonTag.tag) ? Cancel : Okey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"state-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [state.reasonTag.label ? state.reasonTag.label : state.reasonTag.tag, !showMetadata && ((_state$metadata = state.metadata) === null || _state$metadata === void 0 ? void 0 : _state$metadata.length) > 0 ? state.metadata[0].value : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"created-date\",\n              children: [\" \", state.createdAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), linkableStatus && linkableStatus.tags.includes(state.reasonTag.tag) && /*#__PURE__*/_jsxDEV(Link, {\n              target: \"_blank\",\n              style: {\n                textDecoration: \"none\"\n              },\n              className: \"modal-history-a\",\n              to: state.currentValue ? `/${linkableStatus.link}/${state.currentValue}` : \"#\",\n              children: linkableStatus.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: el => {\n              if (el) itemsRef.current[i] = el;\n            },\n            className: classNames(\"metadata\", {\n              expanded: expandedId === state.id,\n              expandable: isExpandable(i)\n            }),\n            children: showMetadata && ((_state$metadata2 = state.metadata) === null || _state$metadata2 === void 0 ? void 0 : _state$metadata2.length) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metadata-text\",\n                children: state === null || state === void 0 ? void 0 : state.metadata[0].value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), isExpandable(i) && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"see-more-label\",\n                onClick: () => onExpandHandler(state.id, i),\n                children: expandedId !== state.id ? i18next.t(\"component:label.button.seeMore\") : i18next.t(\"component:label.button.seeLess\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, state.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StateHistory, \"ZfQyRlok9TnU6dvN/Z0ayPHrS+o=\");\n\n_c = StateHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateHistory\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/StatesHistory/StateHistory.tsx"],"names":["useState","useRef","useEffect","useCallback","Link","classNames","i18next","StateHistory","history","cancelStatus","linkableStatus","title","showMetadata","transaccion","expandedId","setExpandedId","firstUpdate","setFirstUpdate","itemsRef","current","slice","length","prev","onExpandHandler","stateId","i","expandable","isExpandable","paragraph","getElement","lineHeight","scrollHeight","elem","child","children","map","state","includes","reasonTag","tag","Cancel","Okey","label","metadata","value","createdAt","tags","textDecoration","currentValue","link","el","expanded","id","t"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, useCallback } from \"react\";\nimport { StateHistoryProps } from \"./types\";\nimport \"./StateHistory.scss\";\nimport { Link } from \"react-router-dom\";\nimport Cancel from \"../../assets/transaction/Cancel.svg\";\nimport Okey from \"../../assets/transaction/Okey.svg\";\nimport classNames from \"classnames\";\nimport i18next from \"i18next\";\n\nexport function StateHistory({\n  history,\n  cancelStatus,\n  linkableStatus,\n  title,\n  showMetadata,\n  transaccion,\n}: StateHistoryProps) {\n  const [expandedId, setExpandedId] = useState<number | null>(null);\n  const [firstUpdate, setFirstUpdate] = useState(0);\n  const itemsRef = useRef<HTMLDivElement[]>([]);\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, history.length);\n    if (itemsRef.current.length > 0) setFirstUpdate(prev => prev + 1);\n  }, [history]);\n\n  const onExpandHandler = (stateId: number, i: number) => {\n    const expandable = isExpandable(i);\n    if (!expandable) return;\n\n    if (stateId === expandedId) setExpandedId(null);\n    else setExpandedId(stateId);\n  };\n\n  const isExpandable = useCallback(\n    (i: number) => {\n      const paragraph = getElement(i);\n      const lineHeight = 19;\n      if (paragraph) return paragraph.scrollHeight > 2 * lineHeight;\n\n      return false;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [history, firstUpdate]\n  );\n\n  const getElement = (i: number) => {\n    const elem = itemsRef.current[i];\n    if (elem) {\n      const child = elem.children[0];\n      if (child) return child;\n    }\n    return null;\n  };\n\n  return (\n    <div>\n      {title && (\n        <div>\n          <h3 className=\"modal-history-h3\">{title}</h3>\n          <hr className=\"modal-history-separate-option\" />\n        </div>\n      )}\n      <div className=\"history-container\">\n        {history.map((state, i) => (\n          <div\n            key={state.id}\n            className={\n              transaccion ? \"state-container transaction\" : \"state-container\"\n            }\n          >\n            <img\n              className=\"image\"\n              alt=\"state\"\n              src={cancelStatus?.includes(state.reasonTag.tag) ? Cancel : Okey}\n            />\n            <div className=\"state-name\">\n              <p>\n                {state.reasonTag.label\n                  ? state.reasonTag.label\n                  : state.reasonTag.tag}\n                {!showMetadata && state.metadata?.length > 0\n                  ? state.metadata[0].value\n                  : \"\"}\n              </p>\n              <p className=\"created-date\"> {state.createdAt}</p>\n              {linkableStatus &&\n                linkableStatus.tags.includes(state.reasonTag.tag) && (\n                  <Link\n                    target=\"_blank\"\n                    style={{ textDecoration: \"none\" }}\n                    className=\"modal-history-a\"\n                    to={\n                      state.currentValue\n                        ? `/${linkableStatus.link}/${state.currentValue}`\n                        : \"#\"\n                    }\n                  >\n                    {linkableStatus.label}\n                  </Link>\n                )}\n            </div>\n            <div\n              ref={(el) => {\n                if (el) itemsRef.current[i] = el;\n              }}\n              className={classNames(\"metadata\", {\n                expanded: expandedId === state.id,\n                expandable: isExpandable(i),\n              })}\n            >\n              {showMetadata && state.metadata?.length > 0 && (\n                <>\n                  <p className=\"metadata-text\">{state?.metadata[0].value}</p>\n                  {isExpandable(i) && (\n                    <p\n                      className=\"see-more-label\"\n                      onClick={() => onExpandHandler(state.id, i)}\n                    >\n                      {expandedId !== state.id\n                        ? i18next.t(\"component:label.button.seeMore\")\n                        : i18next.t(\"component:label.button.seeLess\")}\n                    </p>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}