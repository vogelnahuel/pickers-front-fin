{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx\";\nimport React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport TreePoints from \"../../../assets/transaction/TreePoints.svg\";\nimport { DATE_FORMATS, transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport i18next from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableTransaction = _ref => {\n  let {\n    transactions,\n    getDetailTransaction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-transaction-table-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-transaction-table-row titleTableTransactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), transactionTableTitles.map(titulo => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: titulo === \"transactionTable:label.table.slaExpiration\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-transaction-table-col-sm-6 flex-align-center\",\n          children: i18next.t(titulo)\n        }, titulo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this) : titulo === \"transactionTable:label.table.status\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-transaction-table-col-sm-5 flex-align-center\",\n          children: i18next.t(titulo)\n        }, titulo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-transaction-table-col-sm-4 flex-align-center\",\n          children: i18next.t(titulo)\n        }, titulo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, titulo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), transactions.length > 0 && transactions.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-transaction-table-row table-content\",\n      onClick: () => getDetailTransaction(data.transaction.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-1 flex-align-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-transaction\",\n          src: TreePoints,\n          alt: \"TreePoints\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-4 flex-align-center\",\n        children: data.transaction.transactionCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-4 flex-align-center\",\n        children: data.transaction.orderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-4 flex-align-center\",\n        children: data.transaction.externalPickerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-6 flex-align-center\",\n        children: [moment(data.transaction.maxDeliveryDateTime.substring(0, 10), DATE_FORMATS.shortISODate).format(DATE_FORMATS.shortDate), data.transaction.inAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-table-alerta\",\n          children: i18next.t(\"transactionTable:label.table.inAlert\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-transaction-table-col-sm-5 flex-align-center\",\n        children: data.transaction.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, `${data.transaction.id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = TableTransaction;\n\nconst mapStateToProps = state => ({\n  transactions: transactionsSelector(state).transactions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDetailTransaction: id => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTransaction\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx"],"names":["React","Fragment","moment","connect","actions","detailTransaction","transactionsSelector","DATE_FORMATS","transactionTableTitles","i18next","TableTransaction","transactions","getDetailTransaction","map","titulo","t","length","data","transaction","id","TreePoints","transactionCode","orderNumber","externalPickerId","maxDeliveryDateTime","substring","shortISODate","format","shortDate","inAlert","state","name","mapStateToProps","mapDispatchToProps","dispatch","getDetailTransactionRequest"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport { TransactionResponseTypeResult } from \"sagas/types/transactions\";\nimport { AppDispatch, RootState } from \"store\";\nimport TreePoints from \"../../../assets/transaction/TreePoints.svg\";\nimport { DATE_FORMATS, transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport { TableTransactionPropsTypes } from \"./types\";\nimport i18next from \"i18next\";\n\nexport const TableTransaction = ({\n  transactions,\n  getDetailTransaction,\n}: TableTransactionPropsTypes) => {\n  return (\n    <div className=\"container-transaction-table-fluid\">\n      <div className=\"container-transaction-table-row titleTableTransactions\">\n        <div className=\"container-transaction-table-col-sm-1\"></div>\n\n        {transactionTableTitles.map((titulo: string) => (\n          <Fragment key={titulo}>\n            {titulo === \"transactionTable:label.table.slaExpiration\" ? (\n              <div\n                className=\"container-transaction-table-col-sm-6 flex-align-center\"\n                key={titulo}\n              >\n                {i18next.t(titulo)}\n              </div>\n            ) : titulo === \"transactionTable:label.table.status\" ? (\n              <div\n                className=\"container-transaction-table-col-sm-5 flex-align-center\"\n                key={titulo}\n              >\n                {i18next.t(titulo)}\n              </div>\n            ) : (\n              <div\n                className=\"container-transaction-table-col-sm-4 flex-align-center\"\n                key={titulo}\n              >\n                {i18next.t(titulo)}\n              </div>\n            )}\n          </Fragment>\n        ))}\n      </div>\n\n      {transactions.length > 0 &&\n        transactions.map((data: TransactionResponseTypeResult) => (\n          <div\n            className=\"container-transaction-table-row table-content\"\n            key={`${data.transaction.id}`}\n            onClick={() => getDetailTransaction(data.transaction.id)}\n          >\n            <div className=\"container-transaction-table-col-sm-1 flex-align-center\">\n              <img\n                className=\"img-transaction\"\n                src={TreePoints}\n                alt=\"TreePoints\"\n              />\n            </div>\n            <div className=\"container-transaction-table-col-sm-4 flex-align-center\">\n              {data.transaction.transactionCode}\n            </div>\n            <div className=\"container-transaction-table-col-sm-4 flex-align-center\">\n              {data.transaction.orderNumber}\n            </div>\n            <div className=\"container-transaction-table-col-sm-4 flex-align-center\">\n              {data.transaction.externalPickerId}\n            </div>\n            <div className=\"container-transaction-table-col-sm-6 flex-align-center\">\n              {moment(\n                data.transaction.maxDeliveryDateTime.substring(0, 10),\n                DATE_FORMATS.shortISODate\n              ).format(DATE_FORMATS.shortDate)}\n              {data.transaction.inAlert && (\n                <div className=\"admin-table-alerta\">\n                  {i18next.t(\"transactionTable:label.table.inAlert\")}\n                </div>\n              )}\n            </div>\n            <div className=\"container-transaction-table-col-sm-5 flex-align-center\">\n              {data.transaction.state.name}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  transactions: transactionsSelector(state).transactions,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  getDetailTransaction: (id: string) => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n"]},"metadata":{},"sourceType":"module"}