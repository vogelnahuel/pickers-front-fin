{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx\";\nimport React from \"react\"; // import moment from \"moment\";\n\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport TreePoints from \"../../../assets/transaction/TreePoints.svg\";\nimport { transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport i18next from \"i18next\";\nimport { ISO8601toDDMMYYYHHMM } from \"utils/iso8601toDDMMYYHHMM\";\nimport { classNames } from \"@react-pdf-viewer/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TableTransaction = _ref => {\n  let {\n    transactions,\n    getDetailTransaction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"titleTableTransactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), transactionTableTitles.map(titulo => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i18next.t(titulo)\n          }, titulo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.length > 0 && transactions.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: `${data.transaction.id}`,\n          onClick: () => getDetailTransaction(data.transaction.id),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-transaction\",\n              src: TreePoints,\n              alt: \"TreePoints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", data.transaction.transactionCode, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", data.transaction.externalPickerId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\n            /*#__PURE__*/\n\n            /* {moment(\n            data.transaction.maxDeliveryDateTime.substring(0, 10),\n            DATE_FORMATS.shortISODate\n            ).format(DATE_FORMATS.shortDate)} */\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ISO8601toDDMMYYYHHMM(data.transaction.maxDeliveryDateTime).substring(0, 10).concat(\"   -\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames({\n                  \"in-alert-red\": data.transaction.inAlert\n                }),\n                children: ISO8601toDDMMYYYHHMM(data.transaction.maxDeliveryDateTime).substring(10, 16)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), data.transaction.inAlert && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"admin-table-alerta\",\n              src: \"\",\n              alt: \"icono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", data.transaction.state.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, `${data.transaction.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TableTransaction;\n\nconst mapStateToProps = state => ({\n  transactions: transactionsSelector(state).transactions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDetailTransaction: id => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTransaction\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/transaction/tableTransaction/TableTransaction.tsx"],"names":["React","connect","actions","detailTransaction","transactionsSelector","transactionTableTitles","i18next","ISO8601toDDMMYYYHHMM","classNames","TableTransaction","transactions","getDetailTransaction","map","titulo","t","length","data","transaction","id","TreePoints","transactionCode","externalPickerId","maxDeliveryDateTime","substring","concat","inAlert","state","name","mapStateToProps","mapDispatchToProps","dispatch","getDetailTransactionRequest"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { actions as detailTransaction } from \"reducers/detailTransaction\";\nimport { transactionsSelector } from \"reducers/transactions\";\nimport { TransactionResponseTypeResult } from \"sagas/types/transactions\";\nimport { AppDispatch, RootState } from \"store\";\nimport TreePoints from \"../../../assets/transaction/TreePoints.svg\";\nimport { transactionTableTitles } from \"../../../utils/constants\";\nimport \"./TableTransaction.scss\";\nimport { TableTransactionPropsTypes } from \"./types\";\nimport i18next from \"i18next\";\nimport { ISO8601toDDMMYYYHHMM } from \"utils/iso8601toDDMMYYHHMM\";\nimport { classNames } from \"@react-pdf-viewer/core\";\n\nexport const TableTransaction = ({\n  transactions,\n  getDetailTransaction,\n}: TableTransactionPropsTypes) => {\n  return (\n    <div>\n      <table className=\"titleTableTransactions\">\n        <thead>\n          <tr>\n            <td></td>\n            {transactionTableTitles.map((titulo: string) => (\n              <td key={titulo}>{i18next.t(titulo)}</td>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.length > 0 &&\n            transactions.map((data: TransactionResponseTypeResult) => (\n              <tr\n                id={`${data.transaction.id}`}\n                key={`${data.transaction.id}`}\n                onClick={() => getDetailTransaction(data.transaction.id)}\n              >\n                <td>\n                  <img\n                    className=\"img-transaction\"\n                    src={TreePoints}\n                    alt=\"TreePoints\"\n                  />\n                </td>\n                <td> {data.transaction.transactionCode} </td>\n                <td> {data.transaction.externalPickerId}</td>\n                <td>\n                  {\n                    /* {moment(\n                    data.transaction.maxDeliveryDateTime.substring(0, 10),\n                    DATE_FORMATS.shortISODate\n                  ).format(DATE_FORMATS.shortDate)} */\n                    <>\n                      <span>\n                        {ISO8601toDDMMYYYHHMM(\n                          data.transaction.maxDeliveryDateTime\n                        ).substring(0, 10).concat(\"   -\")}\n\n                      </span>\n                      {\n                        \n                        <span className={classNames({\n                          \"in-alert-red\":data.transaction.inAlert \n                        }) }>\n                          {ISO8601toDDMMYYYHHMM(\n                            data.transaction.maxDeliveryDateTime\n                          ).substring(10, 16)}\n                        </span>\n\n                      \n                      }\n                    </>\n                  }\n                  {data.transaction.inAlert && (\n                    <img className=\"admin-table-alerta\" src=\"\" alt=\"icono\"/>\n                  )}\n                </td>\n                <td> {data.transaction.state.name}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  transactions: transactionsSelector(state).transactions,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  getDetailTransaction: (id: string) => {\n    dispatch(detailTransaction.getDetailTransactionRequest(id));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);\n"]},"metadata":{},"sourceType":"module"}