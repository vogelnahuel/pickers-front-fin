{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/loadingButton/LoadingButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { LoadingButtonState } from \"./types\";\nimport { ReactComponent as SuccessIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../../assets/admin/success_icon.svg\";\nimport { ReactComponent as ErrorIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./../../assets/admin/error_icon.svg\";\nimport \"./loadingButton.scss\";\nimport { FIRST_ANIMATION_TIME } from \"utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingButton = _ref => {\n  _s();\n\n  let {\n    children,\n    onClick,\n    type,\n    disabled,\n    status\n  } = _ref;\n  const [state, setState] = useState(LoadingButtonState.Idle);\n  const [time, setTime] = useState(false);\n  const [resolved, setResolved] = useState(false);\n\n  const onButtonClick = e => {\n    if (state === LoadingButtonState.Idle) {\n      setState(LoadingButtonState.Loading);\n      setTimeout(() => setTime(true), FIRST_ANIMATION_TIME);\n      if (onClick) onClick(e);\n    } else if (state > LoadingButtonState.Loading && onClick) {\n      setState(LoadingButtonState.Idle);\n      setTime(false);\n      setResolved(false);\n      onClick(e);\n    }\n  };\n\n  useEffect(() => {\n    if (state === LoadingButtonState.Loading && status && status > LoadingButtonState.Loading) {\n      setResolved(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [status]);\n  useEffect(() => {\n    if (resolved && time && status) {\n      setState(status); // Se reinicia el ciclo\n\n      setTime(false);\n      setResolved(false);\n    }\n  }, [status, resolved, time]);\n  const classes = [\"default-loading-button\", state > LoadingButtonState.Loading && \"button-fade-out\"].join(\" \");\n  const loadingBarClasses = [\"button-loading-bar\", state === LoadingButtonState.Loading && \"button-loading-50-animation\", state > LoadingButtonState.Loading && \"button-loading-100-animation\"].join(\" \");\n  const resultBarClasses = [\"button-result-bar\", state === LoadingButtonState.Error && \"button-error-animation\", state === LoadingButtonState.Success && \"button-success-animation\"].join(\" \");\n  const iconClasses = [\"button-icon-container\", state > LoadingButtonState.Loading && \"button-icon-animation\"].join(\" \");\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    disabled: disabled,\n    onClick: onButtonClick,\n    className: classes,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: loadingBarClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: resultBarClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-text-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: iconClasses,\n      children: [state === LoadingButtonState.Error && /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 47\n      }, this), state === LoadingButtonState.Success && /*#__PURE__*/_jsxDEV(SuccessIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"button-text-hidden\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoadingButton, \"JqF2/uT+lGPZENmP6LK67af7pJg=\");\n\n_c = LoadingButton;\nexport default LoadingButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingButton\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/loadingButton/LoadingButton.tsx"],"names":["useState","useEffect","LoadingButtonState","FIRST_ANIMATION_TIME","LoadingButton","children","onClick","type","disabled","status","state","setState","Idle","time","setTime","resolved","setResolved","onButtonClick","e","Loading","setTimeout","classes","join","loadingBarClasses","resultBarClasses","Error","Success","iconClasses"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { LoadingButtonProps, LoadingButtonState } from \"./types\";\nimport { ReactComponent as SuccessIcon} from \"./../../assets/admin/success_icon.svg\";\nimport { ReactComponent as ErrorIcon} from \"./../../assets/admin/error_icon.svg\";\nimport \"./loadingButton.scss\";\nimport { FIRST_ANIMATION_TIME } from \"utils/constants\";\n\nconst LoadingButton = ({\n  children,\n  onClick,\n  type,\n  disabled,\n  status,\n}: LoadingButtonProps) => {\n  const [state, setState] = useState<LoadingButtonState>(\n    LoadingButtonState.Idle\n  );\n  const [time, setTime] = useState(false);\n  const [resolved, setResolved] = useState(false);\n\n  const onButtonClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (state === LoadingButtonState.Idle) {\n      setState(LoadingButtonState.Loading);\n      setTimeout(() => (setTime(true)), FIRST_ANIMATION_TIME);\n      if (onClick) onClick(e);\n    }\n    else if(state > LoadingButtonState.Loading && onClick) {\n      setState(LoadingButtonState.Idle);\n      setTime(false);\n      setResolved(false);\n      onClick(e);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      state === LoadingButtonState.Loading &&\n      status &&\n      status > LoadingButtonState.Loading\n    ) {\n      setResolved(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status]);\n\n  useEffect(() => {\n    if (resolved && time && status) {\n      setState(status);\n\n      // Se reinicia el ciclo\n      setTime(false);\n      setResolved(false);\n    }\n  }, [status, resolved, time]);\n\n  const classes = [\n    \"default-loading-button\",\n    state > LoadingButtonState.Loading && \"button-fade-out\"\n  ].join(\" \");\n\n  const loadingBarClasses = [\n    \"button-loading-bar\",\n    state === LoadingButtonState.Loading && \"button-loading-50-animation\",\n    state > LoadingButtonState.Loading && \"button-loading-100-animation\"\n  ].join(\" \")\n\n  const resultBarClasses = [\n    \"button-result-bar\",\n    state === LoadingButtonState.Error && \"button-error-animation\",\n    state === LoadingButtonState.Success && \"button-success-animation\",\n  ].join(\" \")\n\n  const iconClasses = [\n    \"button-icon-container\",\n    state > LoadingButtonState.Loading && \"button-icon-animation\",\n  ].join(\" \")\n\n  return (\n    <button type={type} disabled={disabled} onClick={onButtonClick} className={classes}>\n      <div className={loadingBarClasses}/>\n      <div className={resultBarClasses}/>\n      <div className=\"button-text-container\">\n        <span >{children}</span>  \n      </div>\n      <div className={iconClasses}>\n      { state === LoadingButtonState.Error && <ErrorIcon/>}\n      { state === LoadingButtonState.Success && <SuccessIcon/>}\n      </div>\n      <span className=\"button-text-hidden\">{children}</span>\n     \n    </button>\n  );\n};\n\nexport default LoadingButton;\n"]},"metadata":{},"sourceType":"module"}