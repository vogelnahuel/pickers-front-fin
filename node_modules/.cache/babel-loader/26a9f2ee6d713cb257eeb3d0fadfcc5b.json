{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/pdf-viewer/PdfViewer.tsx\",\n    _s = $RefreshSig$();\n\nimport { Viewer, Worker } from \"@react-pdf-viewer/core\";\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\nimport { toolbarPlugin } from \"@react-pdf-viewer/toolbar\";\nimport React, { useState } from \"react\";\nimport nextPage from \"../../assets/preli/nextPage.svg\";\nimport prePage from \"../../assets/preli/prePage.svg\";\nimport zoomIn from \"../../assets/preli/zoomIn.svg\";\nimport zoomOut from \"../../assets/preli/zoomOut.svg\";\nimport \"./PdfViewer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PdfViewer = props => {\n  _s();\n\n  // const [CurrentPageLabelTest, setCurrentPageLabelTest] = useState<any>();\n  const renderToolbar = Toolbar => /*#__PURE__*/_jsxDEV(Toolbar, {\n    children: slots => {\n      const {\n        CurrentPageLabel,\n        GoToNextPage,\n        GoToPreviousPage,\n        ZoomIn,\n        ZoomOut\n      } = slots;\n      console.log(slots);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ZoomOut, {\n              children: props => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: zoomOut,\n                className: \"zoom-button\",\n                onClick: props.onClick,\n                alt: \"zoom out button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ZoomIn, {\n              children: props => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: zoomIn,\n                className: \"zoom-button\",\n                onClick: props.onClick,\n                alt: \"zoom in button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-navigator-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-navigator\",\n            children: /*#__PURE__*/_jsxDEV(GoToPreviousPage, {\n              children: props => /*#__PURE__*/_jsxDEV(\"img\", {\n                // disabled={props.isDisabled}\n                onClick: props.onClick,\n                src: prePage,\n                alt: \"previus page button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-number\",\n            id: \"page-number\",\n            children: /*#__PURE__*/_jsxDEV(CurrentPageLabel, {\n              children: CurrentPageLabel => {\n                console.log(CurrentPageLabel);\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: `${CurrentPageLabel.currentPage + 1} / ${CurrentPageLabel.numberOfPages}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 32\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-navigator\",\n            children: /*#__PURE__*/_jsxDEV(GoToNextPage, {\n              children: props => /*#__PURE__*/_jsxDEV(\"img\", {\n                // disabled={props.isDisabled}\n                onClick: props.onClick,\n                src: nextPage,\n                alt: \"next page button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: props.children.map((child, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"child-button\",\n              children: child\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  const defaultLayoutPluginInstance = defaultLayoutPlugin({\n    renderToolbar\n  });\n  const [defaultPdfFile] = useState(props.src);\n  const toolbarPluginInstance = toolbarPlugin();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-container\",\n    children: defaultPdfFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Worker, {\n        workerUrl: \"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\",\n        children: /*#__PURE__*/_jsxDEV(Viewer, {\n          fileUrl: defaultPdfFile,\n          plugins: [defaultLayoutPluginInstance, toolbarPluginInstance]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PdfViewer, \"FWFhKUMwUXw5qrj+4ah/ThHceFs=\");\n\n_c = PdfViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/pdf-viewer/PdfViewer.tsx"],"names":["Viewer","Worker","defaultLayoutPlugin","toolbarPlugin","React","useState","PdfViewer","props","renderToolbar","Toolbar","slots","CurrentPageLabel","GoToNextPage","GoToPreviousPage","ZoomIn","ZoomOut","console","log","zoomOut","onClick","zoomIn","prePage","currentPage","numberOfPages","nextPage","children","map","child","index","defaultLayoutPluginInstance","defaultPdfFile","src","toolbarPluginInstance"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,wBAA/B;AACA,OAAO,6CAAP;AACA,SACEC,mBADF,QAIO,kCAJP;AAKA,OAAO,uDAAP;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;;;;;AAKA,OAAO,kBAAP;;;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;AAAA;;AACvD;AAEA,QAAMC,aAAa,GAAIC,OAAD,iBACpB,QAAC,OAAD;AAAA,cACIC,KAAD,IAAwB;AACvB,YAAM;AACJC,QAAAA,gBADI;AAEJC,QAAAA,YAFI;AAGJC,QAAAA,gBAHI;AAIJC,QAAAA,MAJI;AAKJC,QAAAA;AALI,UAMFL,KANJ;AAQAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,mCACE,QAAC,OAAD;AAAA,wBACIH,KAAD,iBACC;AACE,gBAAA,GAAG,EAAEW,OADP;AAEE,gBAAA,SAAS,EAAC,aAFZ;AAGE,gBAAA,OAAO,EAAEX,KAAK,CAACY,OAHjB;AAIE,gBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAA,mCACE,QAAC,MAAD;AAAA,wBACIZ,KAAD,iBACC;AACE,gBAAA,GAAG,EAAEa,MADP;AAEE,gBAAA,SAAS,EAAC,aAFZ;AAGE,gBAAA,OAAO,EAAEb,KAAK,CAACY,OAHjB;AAIE,gBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA2BE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,gBAAD;AAAA,wBACIZ,KAAD,iBACC;AACE;AACA,gBAAA,OAAO,EAAEA,KAAK,CAACY,OAFjB;AAGE,gBAAA,GAAG,EAAEE,OAHP;AAIE,gBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,EAAE,EAAC,aAAhC;AAAA,mCAEI,QAAC,gBAAD;AAAA,wBACIV,gBAAD,IACD;AACEK,gBAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AACA,oCAAS;AAAA,4BAAQ,GAAEA,gBAAgB,CAACW,WAAjB,GAA+B,CAAE,MAChDX,gBAAgB,CAACY,aAClB;AAFM;AAAA;AAAA;AAAA;AAAA,wBAAT;AAIK;AART;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAbF,eA2BE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,YAAD;AAAA,wBACIhB,KAAD,iBACC;AACE;AACA,gBAAA,OAAO,EAAEA,KAAK,CAACY,OAFjB;AAGE,gBAAA,GAAG,EAAEK,QAHP;AAIE,gBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAmEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACGjB,KAAK,CAACkB,QAAN,CAAeC,GAAf,CAAmB,CAACC,KAAD,EAAsBC,KAAtB,KAAwC;AAC1D,gCACE;AAAiB,cAAA,SAAS,EAAC,cAA3B;AAAA,wBACGD;AADH,eAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA+ED;AA3FH;AAAA;AAAA;AAAA;AAAA,UADF;;AAgGA,QAAMC,2BAA2B,GAAG3B,mBAAmB,CAAC;AACtDM,IAAAA;AADsD,GAAD,CAAvD;AAIA,QAAM,CAACsB,cAAD,IAAmBzB,QAAQ,CAACE,KAAK,CAACwB,GAAP,CAAjC;AACA,QAAMC,qBAAqB,GAAG7B,aAAa,EAA3C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACG2B,cAAc,iBACb;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,8DAAlB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEA,cADX;AAEE,UAAA,OAAO,EAAE,CAACD,2BAAD,EAA8BG,qBAA9B;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxHM;;GAAM1B,S;;KAAAA,S","sourcesContent":["import { Viewer, Worker } from \"@react-pdf-viewer/core\";\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport {\n  defaultLayoutPlugin,\n  ToolbarProps,\n  ToolbarSlot,\n} from \"@react-pdf-viewer/default-layout\";\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\nimport { toolbarPlugin } from \"@react-pdf-viewer/toolbar\";\nimport React, { ReactElement, useState } from \"react\";\nimport nextPage from \"../../assets/preli/nextPage.svg\";\nimport prePage from \"../../assets/preli/prePage.svg\";\nimport zoomIn from \"../../assets/preli/zoomIn.svg\";\nimport zoomOut from \"../../assets/preli/zoomOut.svg\";\nimport \"./PdfViewer.scss\";\nimport { PdfViewerPropsTypes } from \"./types\";\n\nexport const PdfViewer = (props: PdfViewerPropsTypes) => {\n  // const [CurrentPageLabelTest, setCurrentPageLabelTest] = useState<any>();\n\n  const renderToolbar = (Toolbar: (props: ToolbarProps) => ReactElement) => (\n    <Toolbar>\n      {(slots: ToolbarSlot) => {\n        const {\n          CurrentPageLabel,\n          GoToNextPage,\n          GoToPreviousPage,\n          ZoomIn,\n          ZoomOut,\n        } = slots;\n\n        console.log(slots)\n       \n        return (\n          <div className=\"toolbar-container\">\n            <div className=\"zoom-container\">\n              <div>\n                <ZoomOut>\n                  {(props) => (\n                    <img\n                      src={zoomOut}\n                      className=\"zoom-button\"\n                      onClick={props.onClick}\n                      alt=\"zoom out button\"\n                    ></img>\n                  )}\n                </ZoomOut>\n              </div>\n              <div>\n                <ZoomIn>\n                  {(props) => (\n                    <img\n                      src={zoomIn}\n                      className=\"zoom-button\"\n                      onClick={props.onClick}\n                      alt=\"zoom in button\"\n                    ></img>\n                  )}\n                </ZoomIn>\n              </div>\n            </div>\n            <div className=\"page-navigator-container\">\n              <div className=\"page-navigator\">\n                <GoToPreviousPage>\n                  {(props) => (\n                    <img\n                      // disabled={props.isDisabled}\n                      onClick={props.onClick}\n                      src={prePage}\n                      alt=\"previus page button\"\n                    ></img>\n                  )}\n                </GoToPreviousPage>\n              </div>\n              <div className=\"page-number\" id=\"page-number\">\n                {\n                  <CurrentPageLabel>\n                    {(CurrentPageLabel) => \n                    {\n                      console.log(CurrentPageLabel)\n                      return ( <span>{`${CurrentPageLabel.currentPage + 1} / ${\n                          CurrentPageLabel.numberOfPages\n                        }`}</span>)\n                          \n                          }}\n                  </CurrentPageLabel>\n                }\n              </div>\n              <div className=\"page-navigator\">\n                <GoToNextPage>\n                  {(props) => (\n                    <img\n                      // disabled={props.isDisabled}\n                      onClick={props.onClick}\n                      src={nextPage}\n                      alt=\"next page button\"\n                    ></img>\n                  )}\n                </GoToNextPage>\n              </div>\n            </div>\n            <div className=\"buttons-container\">\n              {props.children.map((child: ReactElement, index: number) => {\n                return (\n                  <div key={index} className=\"child-button\">\n                    {child}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      }}\n    </Toolbar>\n  );\n\n  const defaultLayoutPluginInstance = defaultLayoutPlugin({\n    renderToolbar,\n  });\n\n  const [defaultPdfFile] = useState(props.src);\n  const toolbarPluginInstance = toolbarPlugin();\n\n  return (\n    <div className=\"pdf-container\">\n      {defaultPdfFile && (\n        <>\n          <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\n            <Viewer\n              fileUrl={defaultPdfFile}\n              plugins={[defaultLayoutPluginInstance, toolbarPluginInstance]}\n            />\n          </Worker>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}