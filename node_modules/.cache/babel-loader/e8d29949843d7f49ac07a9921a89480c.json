{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/inputs/MultipleSelect.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport 'component/inputs/multipleSelect.scss';\nimport 'pages/pickers/detailPicker/DetailPicker.scss';\nimport Arrow from \"assets/admin/flechaAbajo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleSelect = _ref => {\n  _s();\n\n  let {\n    input: {\n      value,\n      name\n    },\n    label,\n    options = [],\n    onChange,\n    placeholder\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [all, setAll] = useState(false);\n  const [optionsState, setOptions] = useState([]);\n  useEffect(() => {\n    setOptions(options.map(ob => {\n      return { ...ob,\n        selected: value.split(\",\").includes(ob.id)\n      };\n    })); // eslint-disable-next-line\n  }, [value]);\n\n  const globalClose = e => {\n    e.stopPropagation();\n    setOpen(false);\n    window.removeEventListener('click', globalClose);\n  };\n\n  const reduceValue = () => {\n    if (all) {\n      return 'Todos';\n    } else {\n      let length = optionsState.filter(ob => ob.selected).length;\n\n      if (length >= 2) {\n        return `${length} Seleccionados`;\n      } else {\n        return reduceState(optionsState, 'label');\n      }\n    }\n  };\n\n  const checkAll = () => {\n    return setAll(optionsState.every(ob => ob.selected));\n  };\n\n  const reduceState = function (map) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n    return map.filter(ob => ob.selected).map(ob => ob[name]).join();\n  };\n\n  const onChangeHandler = (option, e) => {\n    e.stopPropagation();\n    option.selected = !option.selected;\n    checkAll();\n    onChange(name, reduceState(optionsState));\n  };\n\n  const onChangeHandlerAll = e => {\n    e.stopPropagation();\n    let map = optionsState.map(ob => {\n      return { ...ob,\n        selected: !all\n      };\n    });\n    setOptions(map);\n    setAll(!all);\n    onChange(name, reduceState(map));\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    window.addEventListener('click', globalClose);\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-selectbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      className: \"multiple-contenido-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-Admin-Pickers\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: placeholder,\n        value: reduceValue(),\n        disabled: true,\n        className: \"Admin-Pickers-input-select\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"multiple-select-icon\",\n        src: Arrow,\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiple-contenido-opcion\",\n        onClick: e => onChangeHandlerAll(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"multiple-checkboxInput\",\n          type: \"checkbox\",\n          readOnly: true,\n          checked: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"multiple-labelCheckBox\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), optionsState.map((option, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiple-contenido-opcion\",\n        onClick: e => onChangeHandler(option, e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"multiple-checkboxInput\",\n          type: \"checkbox\",\n          readOnly: true,\n          checked: option.selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"multiple-labelCheckBox\",\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MultipleSelect, \"InoViYp+L6dZ/ccBJV5Niexeu9U=\");\n\n_c = MultipleSelect;\nexport default MultipleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/inputs/MultipleSelect.js"],"names":["useEffect","useState","MultipleSelect","input","value","name","label","options","onChange","placeholder","open","setOpen","all","setAll","optionsState","setOptions","map","ob","selected","split","includes","id","globalClose","e","stopPropagation","window","removeEventListener","reduceValue","length","filter","reduceState","checkAll","every","join","onChangeHandler","option","onChangeHandlerAll","handleClick","addEventListener","Arrow","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport 'component/inputs/multipleSelect.scss';\nimport 'pages/pickers/detailPicker/DetailPicker.scss';\nimport Arrow from 'assets/admin/flechaAbajo.svg'\n\nconst MultipleSelect = (\n    { input: { value, name }, label, options = [], onChange, placeholder }\n) => {\n  const [open, setOpen] = useState(false);\n  const [all, setAll] = useState(false);\n  const [optionsState, setOptions] = useState([]);\n\n  useEffect( ()=>{\n    setOptions(options.map(ob => {\n      return {...ob, selected: value.split(\",\").includes(ob.id)};\n    }));\n    // eslint-disable-next-line\n  },[value]);\n\n  const globalClose = (e) => {\n    e.stopPropagation();\n    setOpen(false);\n    window.removeEventListener('click',globalClose);\n  };\n\n  const reduceValue = () => {\n    if (all) {\n      return 'Todos';\n    } else {\n      let length = optionsState.filter((ob)=>ob.selected).length;\n      if (length >= 2) {\n        return `${length} Seleccionados`;\n      } else {\n        return reduceState(optionsState, 'label');\n      }\n    }\n  };\n\n  const checkAll = () => {\n    return setAll(optionsState.every((ob)=>ob.selected));\n  };\n\n  const reduceState = (map, name = 'id') => {\n    return map.filter((ob)=>ob.selected).map(ob => ob[name]).join();\n  };\n\n  const onChangeHandler = (option, e) => {\n    e.stopPropagation();\n    option.selected = !option.selected;\n    checkAll();\n    onChange(name, reduceState(optionsState));\n  };\n\n  const onChangeHandlerAll = (e) => {\n    e.stopPropagation();\n    let map = optionsState.map(ob=>{return {...ob,selected:!all}});\n    setOptions(map)\n    setAll(!all);\n    onChange(name, reduceState(map));\n  };\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    window.addEventListener('click',globalClose);\n    setOpen(!open);\n  };\n  return (\n      <div className=\"multiple-selectbox\">\n          <div  onClick={handleClick} className=\"multiple-contenido-select\">\n            <label className=\"label-Admin-Pickers\">{label}</label>\n              <input placeholder={placeholder} value={reduceValue()} disabled className=\"Admin-Pickers-input-select\" type=\"text\"/>\n              <img className=\"multiple-select-icon\" src={Arrow} alt=\"arrow\"/>\n          </div>\n        { open &&\n        <div className=\"multiple-options\">\n          <div  className=\"multiple-contenido-opcion\" onClick={(e)=>onChangeHandlerAll(e)}>\n            <input  className=\"multiple-checkboxInput\" type=\"checkbox\" readOnly checked={all}/>\n            <label className=\"multiple-labelCheckBox\">Todos</label>\n          </div>\n          {\n            optionsState.map((option,key) => (\n                <div className=\"multiple-contenido-opcion\" key={key} onClick={(e)=>onChangeHandler(option, e)}>\n                  <input className=\"multiple-checkboxInput\" type=\"checkbox\" readOnly checked={option.selected}/>\n                  <label className=\"multiple-labelCheckBox\">{option.label}</label>\n                </div>\n            ))\n          }\n        </div>\n        }\n      </div>\n  );\n}\n\nexport default MultipleSelect;\n"]},"metadata":{},"sourceType":"module"}