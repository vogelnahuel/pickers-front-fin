{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/pickers/PickersContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Pickers } from \"pages/pickers/Pickers\";\nimport { titlesAdminPending, titlesAdminActive } from \"utils/constants\";\nimport { actions, pickersSelector } from \"reducers/pickers\";\nimport { actions as detailPickersActions } from \"reducers/detailPicker\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport { hasPickerWrongFilesSelector } from \"reducers/detailPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PendingUserAdminContainer = props => {\n  _s();\n\n  const changePage = page => {\n    if (props.isDetail || props.actualPage !== page) props.setActualPage(page);\n  };\n\n  useEffect(() => {\n    const filters = props.actualPage === \"PENDING\" ? {\n      pickerStatusId: \"2,3\"\n    } : {\n      pickerStatusId: \"4,5\"\n    };\n    const filtersExtra = {\n      limit: 3\n    };\n    props.setPendingUserExtraFilters(filtersExtra);\n    props.setPendingUserFilters(filters);\n    props.getPendingUser({ ...filtersExtra,\n      ...filters\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.actualPage]);\n  useEffect(() => {\n    props.resetDetailPicker(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Pickers, { ...props,\n    changePage: changePage,\n    tableTitles: props.actualPage === \"PENDING\" ? titlesAdminPending : titlesAdminActive\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PendingUserAdminContainer, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = PendingUserAdminContainer;\n\nconst mapStateToProps = state => ({\n  pendingUsers: pickersSelector(state).users,\n  isFetching: pickersSelector(state).fetching,\n  filters: pickersSelector(state).filters,\n  filtersExtra: pickersSelector(state).filtersExtra,\n  filtersExtraSeeMore: pickersSelector(state).filtersExtraSeeMore,\n  seeMore: pickersSelector(state).seeMore,\n  actualPage: pickersSelector(state).actualPage,\n  wrongFiles: hasPickerWrongFilesSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  reset: () => {\n    dispatch(actions.reset());\n  },\n  resetDetailPicker: () => {\n    dispatch(detailPickersActions.resetPicker());\n  },\n  getPendingUser: params => {\n    dispatch(actions.getPendingUserRequest(params));\n  },\n  setPendingUserFilters: filters => {\n    dispatch(actions.setPendingUserFilters(filters));\n  },\n  setPendingUserExtraFilters: extraFilters => {\n    dispatch(actions.setPendingUserExtraFilters(extraFilters));\n  },\n  setActualPage: page => {\n    dispatch(actions.setActualPage(page));\n  },\n  getPendingUsersExportRequest: (params, element) => {\n    element.blur();\n    dispatch(actions.getPendingUserExportRequest(params));\n  },\n  getMorePendingUser: params => {\n    dispatch(actions.getMorePendingUserRequest(params));\n  },\n  showNotification: content => {\n    dispatch(notificationActions.showNotification(content));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PendingUserAdminContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingUserAdminContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/pickers/PickersContainer.tsx"],"names":["React","useEffect","connect","Pickers","titlesAdminPending","titlesAdminActive","actions","pickersSelector","detailPickersActions","notificationActions","hasPickerWrongFilesSelector","PendingUserAdminContainer","props","changePage","page","isDetail","actualPage","setActualPage","filters","pickerStatusId","filtersExtra","limit","setPendingUserExtraFilters","setPendingUserFilters","getPendingUser","resetDetailPicker","mapStateToProps","state","pendingUsers","users","isFetching","fetching","filtersExtraSeeMore","seeMore","wrongFiles","mapDispatchToProps","dispatch","reset","resetPicker","params","getPendingUserRequest","extraFilters","getPendingUsersExportRequest","element","blur","getPendingUserExportRequest","getMorePendingUser","getMorePendingUserRequest","showNotification","content"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Pickers } from \"pages/pickers/Pickers\";\nimport { titlesAdminPending, titlesAdminActive } from \"utils/constants\";\nimport {\n  PickersParamsType,\n  ParamsMiddlewareType,\n  PickerContainerTypes,\n} from \"./types\";\nimport { AppDispatch, RootState } from \"store\";\nimport { actions, pickersSelector } from \"reducers/pickers\";\nimport { actions as detailPickersActions } from \"reducers/detailPicker\";\nimport { NotificationStateType } from \"reducers/types/notification\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport { hasPickerWrongFilesSelector } from \"reducers/detailPicker\";\nimport { pickerTabs } from \"./detailPicker/types\";\n\nconst PendingUserAdminContainer: React.FC<PickerContainerTypes> = (\n  props\n): JSX.Element => {\n  const changePage = (page: pickerTabs) => {\n\n    if (props.isDetail || props.actualPage !== page) props.setActualPage(page);\n  };\n\n  useEffect(() => {\n    const filters =\n      props.actualPage === \"PENDING\"\n        ? { pickerStatusId: \"2,3\" }\n        : { pickerStatusId: \"4,5\" };\n    const filtersExtra = { limit: 3 };\n    props.setPendingUserExtraFilters(filtersExtra);\n    props.setPendingUserFilters(filters);\n    props.getPendingUser({ ...filtersExtra, ...filters });\n  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.actualPage]);\n\n  useEffect(() => {\n    props.resetDetailPicker();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Pickers\n      {...props}\n      changePage={changePage}\n      tableTitles={\n        props.actualPage === \"PENDING\" ? titlesAdminPending : titlesAdminActive\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  pendingUsers: pickersSelector(state).users,\n  isFetching: pickersSelector(state).fetching,\n  filters: pickersSelector(state).filters,\n  filtersExtra: pickersSelector(state).filtersExtra,\n  filtersExtraSeeMore: pickersSelector(state).filtersExtraSeeMore,\n  seeMore: pickersSelector(state).seeMore,\n  actualPage: pickersSelector(state).actualPage,\n  wrongFiles: hasPickerWrongFilesSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  reset: () => {\n    dispatch(actions.reset());\n  },\n  resetDetailPicker: () => {\n    dispatch(detailPickersActions.resetPicker())\n  },\n  getPendingUser: (params: ParamsMiddlewareType) => {\n    dispatch(actions.getPendingUserRequest(params));\n  },\n  setPendingUserFilters: (filters: PickersParamsType) => {\n    dispatch(actions.setPendingUserFilters(filters));\n  },\n  setPendingUserExtraFilters: (extraFilters: PickersParamsType) => {\n    dispatch(actions.setPendingUserExtraFilters(extraFilters));\n  },\n  setActualPage: (page: pickerTabs) => {\n    dispatch(actions.setActualPage(page));\n  },\n  getPendingUsersExportRequest: (\n    params: ParamsMiddlewareType,\n    element: HTMLElement\n  ) => {\n    element.blur();\n    dispatch(actions.getPendingUserExportRequest(params));\n  },\n  getMorePendingUser: (params: ParamsMiddlewareType) => {\n    dispatch(actions.getMorePendingUserRequest(params));\n  },\n  showNotification: (content: NotificationStateType) => {\n    dispatch(notificationActions.showNotification(content));\n  },\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PendingUserAdminContainer);\n"]},"metadata":{},"sourceType":"module"}