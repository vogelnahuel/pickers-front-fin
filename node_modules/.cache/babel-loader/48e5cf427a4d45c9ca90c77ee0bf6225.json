{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/component/modal/NotificationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Modal } from \"@pickit/pickit-components\";\nimport \"component/modal/notificationModal.scss\";\nimport i18next from \"i18next\";\nimport DOMPurify from \"dompurify\";\nimport { connect } from \"react-redux\";\nimport { actions as notificationActions, notificationSelector } from \"reducers/notification\";\nimport { KEYS } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onClick,\n    level,\n    title,\n    setClose,\n    doAction,\n    body,\n    onCloseLabel,\n    onClickLabel\n  } = _ref;\n  const closeModal = useCallback(e => {\n    e.stopPropagation();\n\n    if (e.keyCode === KEYS.ESC && (level === \"warning\" || level === \"info\")) {\n      e.preventDefault();\n      setClose();\n    } else if ((e.keyCode === KEYS.ESC || e.keyCode === KEYS.ENTER) && (level === \"success\" || level === \"error\")) {\n      e.preventDefault();\n      onClose ? doAction(onClose) : onClick ? doAction(onClick) : setClose();\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [setClose, level]);\n  useEffect(() => {\n    if (isOpen) document.addEventListener(\"keydown\", closeModal);\n    return () => {\n      document.removeEventListener(\"keydown\", closeModal);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-notification-background\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      width: \"750px\",\n      height: \"304px\",\n      isOpen: isOpen,\n      onClose: () => setClose(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal-title ${level}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body-text\",\n          dangerouslySetInnerHTML: {\n            __html: DOMPurify.sanitize(body)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body-buttons\",\n          children: [onCloseLabel && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose ? () => doAction(onClose) : () => setClose(),\n            className: `modal-button-cancel ${level} mh-10`,\n            children: i18next.t(onCloseLabel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClick ? () => doAction(onClick) : () => setClose(),\n            className: `modal-button-submit ${level} mh-10`,\n            children: i18next.t(onClickLabel || \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationModal, \"KJNDRhEQ3EZdsW76fhqOrzTBHkg=\");\n\n_c = NotificationModal;\n\nconst mapStateToProps = state => ({\n  isOpen: notificationSelector(state).open || false,\n  onCloseLabel: notificationSelector(state).onCloseLabel,\n  onClickLabel: notificationSelector(state).onClickLabel,\n  level: notificationSelector(state).level,\n  title: notificationSelector(state).title,\n  body: notificationSelector(state).body,\n  onClick: notificationSelector(state).onClick,\n  onClose: notificationSelector(state).onClose\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setClose: () => {\n    dispatch(notificationActions.hideNotification());\n  },\n  doAction: action => {\n    action && action();\n    dispatch(notificationActions.hideNotification());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationModal\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/component/modal/NotificationModal.tsx"],"names":["React","useCallback","useEffect","Modal","i18next","DOMPurify","connect","actions","notificationActions","notificationSelector","KEYS","NotificationModal","isOpen","onClose","onClick","level","title","setClose","doAction","body","onCloseLabel","onClickLabel","closeModal","e","stopPropagation","keyCode","ESC","preventDefault","ENTER","document","addEventListener","removeEventListener","__html","sanitize","t","mapStateToProps","state","open","mapDispatchToProps","dispatch","hideNotification","action"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Modal } from \"@pickit/pickit-components\";\nimport \"component/modal/notificationModal.scss\";\nimport i18next from \"i18next\";\nimport DOMPurify from \"dompurify\";\nimport { connect } from \"react-redux\";\nimport {\n  actions as notificationActions,\n  notificationSelector,\n} from \"reducers/notification\";\nimport { AppDispatch, RootState } from \"store\";\nimport { KEYS, NotificationType } from \"./types\";\n\nexport const NotificationModal = ({\n  isOpen,\n  onClose,\n  onClick,\n  level,\n  title,\n  setClose,\n  doAction,\n  body,\n  onCloseLabel,\n  onClickLabel,\n}: NotificationType) => {\n  const closeModal = useCallback(\n    (e) => {\n      e.stopPropagation();\n      if (e.keyCode === KEYS.ESC && (level === \"warning\" || level === \"info\")) {\n        e.preventDefault();\n        setClose();\n      } else if (\n        (e.keyCode === KEYS.ESC || e.keyCode === KEYS.ENTER) &&\n        (level === \"success\" || level === \"error\")\n      ) {\n        e.preventDefault();\n        onClose ? doAction(onClose) : onClick ? doAction(onClick) : setClose();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [setClose, level]\n  );\n\n  useEffect(() => {\n    if (isOpen) document.addEventListener(\"keydown\", closeModal);\n\n    return () => {\n      document.removeEventListener(\"keydown\", closeModal);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-notification-background\">\n      <Modal\n        width=\"750px\"\n        height=\"304px\"\n        isOpen={isOpen}\n        onClose={() => setClose()}\n      >\n        <div className={`modal-title ${level}`}>\n          <p>{title}</p>\n        </div>\n        <div className=\"modal-body-content\">\n          <div\n            className=\"modal-body-text\"\n            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(body) }}\n          />\n          <div className=\"modal-body-buttons\">\n            {onCloseLabel && (\n              <button\n                onClick={onClose ? () => doAction(onClose) : () => setClose()}\n                className={`modal-button-cancel ${level} mh-10`}\n              >\n                {i18next.t(onCloseLabel)}\n              </button>\n            )}\n            <button\n              onClick={onClick ? () => doAction(onClick) : () => setClose()}\n              className={`modal-button-submit ${level} mh-10`}\n            >\n              {i18next.t(onClickLabel || \"\")}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isOpen: notificationSelector(state).open || false,\n  onCloseLabel: notificationSelector(state).onCloseLabel,\n  onClickLabel: notificationSelector(state).onClickLabel,\n  level: notificationSelector(state).level,\n  title: notificationSelector(state).title,\n  body: notificationSelector(state).body,\n  onClick: notificationSelector(state).onClick,\n  onClose: notificationSelector(state).onClose,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  setClose: () => {\n    dispatch(notificationActions.hideNotification());\n  },\n  doAction: (action: Function | undefined) => {\n    action && action();\n    dispatch(notificationActions.hideNotification());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationModal);\n"]},"metadata":{},"sourceType":"module"}