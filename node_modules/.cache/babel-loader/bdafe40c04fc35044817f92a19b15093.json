{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/pickers/actions/ExportAction.tsx\";\nimport React from \"react\";\nimport exportar from \"assets/admin/PendingUser/exportar.svg\";\nimport or from \"assets/admin/PendingUser/or.svg\";\nimport { connect } from \"react-redux\";\nimport { detailPickerSelector as pendingUserAdminPickerSelectors } from \"reducers/detailPicker\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport i18next from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExportAction = _ref => {\n  let {\n    getPendingUserPickerExport,\n    isDirty,\n    showNotification\n  } = _ref;\n\n  const handleClick = () => {\n    const html = document.documentElement;\n    const height = Math.max(html.clientHeight, html.scrollHeight);\n\n    if (isDirty && showNotification) {\n      showNotification({\n        level: \"warning\",\n        title: i18next.t(\"pickers:title.modal.saveChanges\"),\n        body: i18next.t(\"pickers:label.modal.exportWithoutSave\"),\n        onClickLabel: \"pickers:button.modal.goToSave\",\n        onCloseLabel: \"pickers:button.modal.exportWithoutSave\",\n        onClose: () => getPendingUserPickerExport(),\n        onClick: () => window.scroll({\n          top: height,\n          left: 0,\n          behavior: \"smooth\"\n        })\n      });\n    } else {\n      getPendingUserPickerExport();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"export\",\n      name: \"export\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: exportar,\n        alt: \"export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"or-pending\",\n        src: or,\n        alt: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-inline-block p-export\",\n        children: i18next.t(\"global:label.button.export\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExportAction;\n\nconst mapStateToProps = state => ({\n  isDirty: pendingUserAdminPickerSelectors(state).dirty\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showNotification: content => {\n    dispatch(notificationActions.showNotification(content));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportAction);\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportAction\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/pickers/actions/ExportAction.tsx"],"names":["React","connect","detailPickerSelector","pendingUserAdminPickerSelectors","actions","notificationActions","i18next","ExportAction","getPendingUserPickerExport","isDirty","showNotification","handleClick","html","document","documentElement","height","Math","max","clientHeight","scrollHeight","level","title","t","body","onClickLabel","onCloseLabel","onClose","onClick","window","scroll","top","left","behavior","exportar","or","mapStateToProps","state","dirty","mapDispatchToProps","dispatch","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAoB,IAAIC,+BAAjC,QAAwE,uBAAxE;AACA,SAASC,OAAO,IAAIC,mBAApB,QAA+C,uBAA/C;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAKA,MAAMC,YAAY,GAAG,QAIQ;AAAA,MAJP;AACpBC,IAAAA,0BADoB;AAEpBC,IAAAA,OAFoB;AAGpBC,IAAAA;AAHoB,GAIO;;AAC3B,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAtB;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,CAACM,YAAd,EAA4BN,IAAI,CAACO,YAAjC,CAAf;;AAEA,QAAIV,OAAO,IAAIC,gBAAf,EAAiC;AAC/BA,MAAAA,gBAAgB,CAAC;AACfU,QAAAA,KAAK,EAAE,SADQ;AAEfC,QAAAA,KAAK,EAAEf,OAAO,CAACgB,CAAR,CAAU,iCAAV,CAFQ;AAGfC,QAAAA,IAAI,EAAEjB,OAAO,CAACgB,CAAR,CAAU,uCAAV,CAHS;AAIfE,QAAAA,YAAY,EAAE,+BAJC;AAKfC,QAAAA,YAAY,EAAE,wCALC;AAMfC,QAAAA,OAAO,EAAE,MAAMlB,0BAA0B,EAN1B;AAOfmB,QAAAA,OAAO,EAAE,MACPC,MAAM,CAACC,MAAP,CAAc;AACZC,UAAAA,GAAG,EAAEf,MADO;AAEZgB,UAAAA,IAAI,EAAE,CAFM;AAGZC,UAAAA,QAAQ,EAAE;AAHE,SAAd;AARa,OAAD,CAAhB;AAcD,KAfD,MAeO;AACLxB,MAAAA,0BAA0B;AAC3B;AACF,GAtBD;;AAwBA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAA8B,MAAA,SAAS,EAAC,QAAxC;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEsB,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEC,EAAjC;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,+BAAb;AAAA,kBACG5B,OAAO,CAACgB,CAAR,CAAU,4BAAV;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxCD;;KAAMf,Y;;AA0CN,MAAM4B,eAAe,GAAIC,KAAD,KAAuB;AAC7C3B,EAAAA,OAAO,EAAEN,+BAA+B,CAACiC,KAAD,CAA/B,CAAuCC;AADH,CAAvB,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAA4B;AACrD7B,EAAAA,gBAAgB,EAAG8B,OAAD,IAAoC;AACpDD,IAAAA,QAAQ,CAAClC,mBAAmB,CAACK,gBAApB,CAAqC8B,OAArC,CAAD,CAAR;AACD;AAHoD,CAA5B,CAA3B;;AAKA,eAAevC,OAAO,CAACkC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/B,YAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport exportar from \"assets/admin/PendingUser/exportar.svg\";\nimport or from \"assets/admin/PendingUser/or.svg\";\nimport { connect } from \"react-redux\";\nimport { detailPickerSelector as pendingUserAdminPickerSelectors } from \"reducers/detailPicker\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport i18next from \"i18next\";\nimport { AppDispatch, RootState } from \"store\";\nimport { NotificationStateType } from \"reducers/types/notification\";\nimport { ExportActionPropsType } from \"./types\";\n\nconst ExportAction = ({\n  getPendingUserPickerExport,\n  isDirty,\n  showNotification,\n}: ExportActionPropsType) => {\n  const handleClick = () => {\n    const html = document.documentElement;\n    const height = Math.max(html.clientHeight, html.scrollHeight);\n  \n    if (isDirty && showNotification) {\n      showNotification({\n        level: \"warning\",\n        title: i18next.t(\"pickers:title.modal.saveChanges\"),\n        body: i18next.t(\"pickers:label.modal.exportWithoutSave\"),\n        onClickLabel: \"pickers:button.modal.goToSave\",\n        onCloseLabel: \"pickers:button.modal.exportWithoutSave\",\n        onClose: () => getPendingUserPickerExport(),\n        onClick: () =>\n          window.scroll({\n            top: height,\n            left: 0,\n            behavior: \"smooth\",\n          }),\n      });\n    } else {\n      getPendingUserPickerExport();\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick} className=\"export\" name=\"export\">\n        <img src={exportar} alt=\"export\" />\n        <img className=\"or-pending\" src={or} alt=\"or\" />\n        <p className=\"display-inline-block p-export\">\n          {i18next.t(\"global:label.button.export\")}\n        </p>\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isDirty: pendingUserAdminPickerSelectors(state).dirty,\n});\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  showNotification: (content: NotificationStateType) => {\n    dispatch(notificationActions.showNotification(content));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportAction);\n"]},"metadata":{},"sourceType":"module"}