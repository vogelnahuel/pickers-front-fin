{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/preliquidation/DetailPreliquidation/preliquidation/DetailPreliquidationContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DetailPreliquidation } from \"./DetailPreliquidation\";\nimport { preliquidationSelector, actions } from \"reducers/preliquidation\";\nimport { useHistory } from \"react-router-dom\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DetailPreliquidationContainer = props => {\n  _s();\n\n  const history = useHistory();\n\n  const changePage = page => {// if (props.isDetail || props.actualPage !== page) props.setActualPage(page);\n  };\n\n  const handleClickBack = dirty => {\n    history.goBack(); //   if (dirty) showDirtyNotification(onClose);\n    //   else if (props.invoiceFileStatus.error) showWrongFilesNotification(onClose);\n    //   else onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(DetailPreliquidation, {\n    handleClickBack: handleClickBack,\n    changePage: changePage,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DetailPreliquidationContainer, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DetailPreliquidationContainer;\n\nconst mapStateToProps = state => ({\n  isFetching: preliquidationSelector(state).fetching,\n  actualPage: preliquidationSelector(state).actualPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showNotification: content => {\n    dispatch(notificationActions.showNotification(content));\n  },\n  setActualPage: page => {\n    dispatch(actions.setActualPage(page));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPreliquidationContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPreliquidationContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/preliquidation/DetailPreliquidation/preliquidation/DetailPreliquidationContainer.tsx"],"names":["React","connect","DetailPreliquidation","preliquidationSelector","actions","useHistory","notificationActions","DetailPreliquidationContainer","props","history","changePage","page","handleClickBack","dirty","goBack","mapStateToProps","state","isFetching","fetching","actualPage","mapDispatchToProps","dispatch","showNotification","content","setActualPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,SAASC,sBAAT,EAAgCC,OAAhC,QAA+C,yBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASD,OAAO,IAAIE,mBAApB,QAA+C,uBAA/C;;AAGA,OAAO,MAAMC,6BAA6B,GACxCC,KAD2C,IAE3B;AAAA;;AAChB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,UAAU,GAAIC,IAAD,IAAkB,CACnC;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,KAAD,IAAoB;AACzCJ,IAAAA,OAAO,CAACK,MAAR,GADyC,CAG5C;AACA;AACA;AACE,GANF;;AAQA,sBAAO,QAAC,oBAAD;AAAuB,IAAA,eAAe,EAAGF,eAAzC;AAA0D,IAAA,UAAU,EAAEF,UAAtE;AAAA,OAAsFF;AAAtF;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CApBM;;GAAMD,6B;UAGKF,U;;;KAHLE,6B;;AAwBb,MAAMQ,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,UAAU,EAAEd,sBAAsB,CAACa,KAAD,CAAtB,CAA8BE,QADG;AAE7CC,EAAAA,UAAU,EAAEhB,sBAAsB,CAACa,KAAD,CAAtB,CAA8BG;AAFG,CAAvB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAA4B;AACrDC,EAAAA,gBAAgB,EAAGC,OAAD,IAAoC;AACpDF,IAAAA,QAAQ,CAACf,mBAAmB,CAACgB,gBAApB,CAAqCC,OAArC,CAAD,CAAR;AACD,GAHoD;AAIrDC,EAAAA,aAAa,EAAGb,IAAD,IAAkB;AAC/BU,IAAAA,QAAQ,CAACjB,OAAO,CAACoB,aAAR,CAAsBb,IAAtB,CAAD,CAAR;AACD;AANoD,CAA5B,CAA3B;;AAUA,eAAeV,OAAO,CACpBc,eADoB,EAEpBK,kBAFoB,CAAP,CAGbb,6BAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppDispatch, RootState } from \"store\";\nimport { DetailPreliquidation } from \"./DetailPreliquidation\";\nimport { DetailPreliquidationContainerPropsType } from \"./types\";\nimport { preliquidationSelector,actions } from \"reducers/preliquidation\";\nimport { useHistory } from \"react-router-dom\";\nimport { NotificationStateType } from \"reducers/types/notification\";\nimport { actions as notificationActions } from \"reducers/notification\";\n\n\nexport const DetailPreliquidationContainer = (\n  props: DetailPreliquidationContainerPropsType\n): JSX.Element => {\n  const history = useHistory();\n\n  const changePage = (page: string) => {\n    // if (props.isDetail || props.actualPage !== page) props.setActualPage(page);\n  };\n  \n  const handleClickBack = (dirty: boolean) => {\n     history.goBack();\n  \n  //   if (dirty) showDirtyNotification(onClose);\n  //   else if (props.invoiceFileStatus.error) showWrongFilesNotification(onClose);\n  //   else onClose();\n   };\n\n  return <DetailPreliquidation  handleClickBack ={handleClickBack} changePage={changePage} {...props} />;\n\n\n};\n\n\n\nconst mapStateToProps = (state: RootState) => ({\n  isFetching: preliquidationSelector(state).fetching,\n  actualPage: preliquidationSelector(state).actualPage,\n});\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  showNotification: (content: NotificationStateType) => {\n    dispatch(notificationActions.showNotification(content));\n  },\n  setActualPage: (page: string) => {\n    dispatch(actions.setActualPage(page));\n  },\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailPreliquidationContainer);\n\n"]},"metadata":{},"sourceType":"module"}