{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/login/LoginContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as loginActions, loginSelector } from \"../../reducers/login\";\nimport Login from \"./Login\";\nimport * as yup from \"yup\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport i18next from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = props => {\n  const validationSchema = yup.object({\n    email: yup.string().required(i18next.t(\"global:error.input.required\")).matches(VALIDATION_REGEX.regEmail, i18next.t(\"login:error.login.invalidMail\")),\n    password: yup.string().required(i18next.t(\"global:error.input.required\"))\n  });\n  return /*#__PURE__*/_jsxDEV(Login, { ...props,\n    validationSchema: validationSchema\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = LoginContainer;\n\nconst mapStateToProps = state => ({\n  isFetching: loginSelector(state).fetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postLogin: params => {\n    dispatch(loginActions.getLoginRequest(params));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/login/LoginContainer.tsx"],"names":["React","connect","actions","loginActions","loginSelector","Login","yup","VALIDATION_REGEX","i18next","LoginContainer","props","validationSchema","object","email","string","required","t","matches","regEmail","password","mapStateToProps","state","isFetching","fetching","mapDispatchToProps","dispatch","postLogin","params","getLoginRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,OAAO,IAAIC,YADb,EAEEC,aAFF,QAGO,sBAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAGA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,MAAMC,cAA4C,GAAIC,KAAD,IAAwB;AAC3E,QAAMC,gBAAyC,GAAGL,GAAG,CAACM,MAAJ,CAAW;AAC3DC,IAAAA,KAAK,EAAEP,GAAG,CACPQ,MADI,GAEJC,QAFI,CAEKP,OAAO,CAACQ,CAAR,CAAU,6BAAV,CAFL,EAGJC,OAHI,CAIHV,gBAAgB,CAACW,QAJd,EAKHV,OAAO,CAACQ,CAAR,CAAU,+BAAV,CALG,CADoD;AAQ3DG,IAAAA,QAAQ,EAAEb,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsBP,OAAO,CAACQ,CAAR,CAAU,6BAAV,CAAtB;AARiD,GAAX,CAAlD;AAWA,sBAAO,QAAC,KAAD,OAAWN,KAAX;AAAkB,IAAA,gBAAgB,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;KAAMF,c;;AAeN,MAAMW,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,UAAU,EAAElB,aAAa,CAACiB,KAAD,CAAb,CAAqBE;AADY,CAAvB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAA4B;AACrDC,EAAAA,SAAS,EAAGC,MAAD,IAAuB;AAChCF,IAAAA,QAAQ,CAACtB,YAAY,CAACyB,eAAb,CAA6BD,MAA7B,CAAD,CAAR;AACD;AAHoD,CAA5B,CAA3B;;AAMA,eAAe1B,OAAO,CAACmB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,cAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  actions as loginActions,\n  loginSelector,\n} from \"../../reducers/login\";\nimport Login from \"./Login\";\nimport * as yup from \"yup\";\nimport { VALIDATION_REGEX } from \"utils/constants\";\nimport { LoginContainerType, LoginType } from \"./types\";\nimport { AppDispatch, RootState } from \"../../store\";\nimport i18next from \"i18next\";\n\nconst LoginContainer: React.FC<LoginContainerType> = (props): JSX.Element => {\n  const validationSchema: yup.SchemaOf<LoginType> = yup.object({\n    email: yup\n      .string()\n      .required(i18next.t(\"global:error.input.required\"))\n      .matches(\n        VALIDATION_REGEX.regEmail,\n        i18next.t(\"login:error.login.invalidMail\")\n      ),\n    password: yup.string().required(i18next.t(\"global:error.input.required\")),\n  });\n\n  return <Login {...props} validationSchema={validationSchema} />;\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isFetching: loginSelector(state).fetching,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  postLogin: (params: LoginType) => {\n    dispatch(loginActions.getLoginRequest(params));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n"]},"metadata":{},"sourceType":"module"}