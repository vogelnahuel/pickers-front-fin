{"ast":null,"code":"import * as API from \"middleware/api\";\nexport const getPickers = params => API.get(\"/ms-admin-rest/api/v1.0/pickers\", params); //TODO: unificar los export del csv\n\nexport const getPickersExport = params => {\n  const {\n    limit,\n    offset,\n    ...body\n  } = params;\n  return API.get(\"/ms-admin-rest/api/v1.0/pickers.csv\", body);\n};\nexport const getPicker = params => API.get(`/ms-admin-rest/api/v1.0/pickers/${params}`);\nexport const getPickerExport = params => {\n  const {\n    limit,\n    offset,\n    ...body\n  } = params;\n  return API.get(`/ms-admin-rest/api/v1.0/pickers.csv`, body);\n};\nexport const postPickerDocumentsEdit = params => API.post(`/ms-admin-rest/api/v1.0/pickers/${params.id}/invalid-documentation`, params);\nexport const postEditPicker = params => API.post(`/ms-admin-rest/api/v1.0/pickers/${params.id}`, params);\nexport const postAprovePicker = params => API.post(`/ms-admin-rest/api/v1.0/pickers/${params.id}/approve`, params);\nexport const fileUpload = (id, params) => API.put(`/ms-admin-rest/api/v1.0/pickers/${id}/files`, params);\nexport const getFile = _ref => {\n  let {\n    pickerId,\n    tag\n  } = _ref;\n  return API.get(`/ms-admin-rest/api/v1.0/pickers/${pickerId}/files/${tag}`);\n};\nexport const deleteFile = (id, tag) => API.remove(`/ms-admin-rest/api/v1.0/pickers/${id}/files/${tag}`);\nexport const getBankName = cbuPrefix => {\n  return API.get(`/ms-admin-rest/api/v1.0/banks/${cbuPrefix}`);\n};\nexport const getProvinces = () => API.get(`/ms-admin-rest/api/v1.0/provinces`);","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/middleware/pickers.ts"],"names":["API","getPickers","params","get","getPickersExport","limit","offset","body","getPicker","getPickerExport","postPickerDocumentsEdit","post","id","postEditPicker","postAprovePicker","fileUpload","put","getFile","pickerId","tag","deleteFile","remove","getBankName","cbuPrefix","getProvinces"],"mappings":"AACA,OAAO,KAAKA,GAAZ,MAAqB,gBAArB;AAgBA,OAAO,MAAMC,UAAU,GACrBC,MADwB,IAGxBF,GAAG,CAACG,GAAJ,CAAQ,iCAAR,EAA2CD,MAA3C,CAHK,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAC3BF,MAD8B,IAEwB;AACtD,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiB,OAAGC;AAApB,MAA6BL,MAAnC;AACA,SAAOF,GAAG,CAACG,GAAJ,CAAQ,qCAAR,EAA+CI,IAA/C,CAAP;AACD,CALM;AAOP,OAAO,MAAMC,SAAS,GAAIN,MAAD,IACvBF,GAAG,CAACG,GAAJ,CAAS,mCAAkCD,MAAO,EAAlD,CADK;AAGP,OAAO,MAAMO,eAAe,GAC1BP,MAD6B,IAEyB;AACtD,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiB,OAAGC;AAApB,MAA6BL,MAAnC;AACA,SAAOF,GAAG,CAACG,GAAJ,CAAS,qCAAT,EAA+CI,IAA/C,CAAP;AACD,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAClCR,MADqC,IAGrCF,GAAG,CAACW,IAAJ,CACG,mCAAkCT,MAAM,CAACU,EAAG,wBAD/C,EAEEV,MAFF,CAHK;AAQP,OAAO,MAAMW,cAAc,GACzBX,MAD4B,IAG5BF,GAAG,CAACW,IAAJ,CAAU,mCAAkCT,MAAM,CAACU,EAAG,EAAtD,EAAyDV,MAAzD,CAHK;AAKP,OAAO,MAAMY,gBAAgB,GAC3BZ,MAD8B,IAG9BF,GAAG,CAACW,IAAJ,CAAU,mCAAkCT,MAAM,CAACU,EAAG,UAAtD,EAAiEV,MAAjE,CAHK;AAKP,OAAO,MAAMa,UAAU,GAAG,CACxBH,EADwB,EAExBV,MAFwB,KAIxBF,GAAG,CAACgB,GAAJ,CAAS,mCAAkCJ,EAAG,QAA9C,EAAuDV,MAAvD,CAJK;AAMP,OAAO,MAAMe,OAAO,GAAG;AAAA,MAAC;AACtBC,IAAAA,QADsB;AAEtBC,IAAAA;AAFsB,GAAD;AAAA,SAIrBnB,GAAG,CAACG,GAAJ,CAAS,mCAAkCe,QAAS,UAASC,GAAI,EAAjE,CAJqB;AAAA,CAAhB;AAMP,OAAO,MAAMC,UAAU,GAAG,CACxBR,EADwB,EAExBO,GAFwB,KAIxBnB,GAAG,CAACqB,MAAJ,CAAY,mCAAkCT,EAAG,UAASO,GAAI,EAA9D,CAJK;AAMP,OAAO,MAAMG,WAAW,GACtBC,SADyB,IAEqC;AAC9D,SAAOvB,GAAG,CAACG,GAAJ,CAAS,iCAAgCoB,SAAU,EAAnD,CAAP;AACD,CAJM;AAKP,OAAO,MAAMC,YAAY,GAAG,MAEvBxB,GAAG,CAACG,GAAJ,CAAS,mCAAT,CAFE","sourcesContent":["import { AxiosResponse } from \"axios\";\nimport * as API from \"middleware/api\";\nimport { PickerFileRequestType } from \"pages/pickers/detailPicker/types\";\nimport {\n  BankResponseType,\n  DetailPickersProvincesApiResponseType,\n  ExpandableFileLoadParamType,\n} from \"sagas/types/pickers\";\nimport {\n  PickerType,\n  EditPickerResponseType,\n  ParamsMiddlewareType,\n  PickersAxiosResponseType,\n  PickersExportResponseType,\n  PickerFileResponseType,\n} from \"../pages/pickers/types\";\n\nexport const getPickers = (\n  params: ParamsMiddlewareType\n): Promise<AxiosResponse<PickersAxiosResponseType>> =>\n  API.get(\"/ms-admin-rest/api/v1.0/pickers\", params);\n\n//TODO: unificar los export del csv\nexport const getPickersExport = (\n  params: ParamsMiddlewareType\n): Promise<AxiosResponse<PickersExportResponseType>> => {\n  const { limit, offset, ...body } = params;\n  return API.get(\"/ms-admin-rest/api/v1.0/pickers.csv\", body);\n};\n\nexport const getPicker = (params: number): Promise<AxiosResponse<PickerType>> =>\n  API.get(`/ms-admin-rest/api/v1.0/pickers/${params}`);\n\nexport const getPickerExport = (\n  params: ParamsMiddlewareType\n): Promise<AxiosResponse<PickersExportResponseType>> => {\n  const { limit, offset, ...body } = params;\n  return API.get(`/ms-admin-rest/api/v1.0/pickers.csv`, body);\n};\n\nexport const postPickerDocumentsEdit = (\n  params: PickerType\n): Promise<AxiosResponse<EditPickerResponseType>> =>\n  API.post(\n    `/ms-admin-rest/api/v1.0/pickers/${params.id}/invalid-documentation`,\n    params\n  );\n\nexport const postEditPicker = (\n  params: PickerType\n): Promise<AxiosResponse<EditPickerResponseType>> =>\n  API.post(`/ms-admin-rest/api/v1.0/pickers/${params.id}`, params);\n\nexport const postAprovePicker = (\n  params: PickerType\n): Promise<AxiosResponse<EditPickerResponseType>> =>\n  API.post(`/ms-admin-rest/api/v1.0/pickers/${params.id}/approve`, params);\n\nexport const fileUpload = (\n  id: number,\n  params: ExpandableFileLoadParamType\n): Promise<AxiosResponse<{}>> =>\n  API.put(`/ms-admin-rest/api/v1.0/pickers/${id}/files`, params);\n\nexport const getFile = ({\n  pickerId,\n  tag,\n}: PickerFileRequestType): Promise<AxiosResponse<PickerFileResponseType>> =>\n  API.get(`/ms-admin-rest/api/v1.0/pickers/${pickerId}/files/${tag}`);\n\nexport const deleteFile = (\n  id: number,\n  tag: string\n): Promise<AxiosResponse<{}>> =>\n  API.remove(`/ms-admin-rest/api/v1.0/pickers/${id}/files/${tag}`);\n\nexport const getBankName = (\n  cbuPrefix: string\n): Promise<AxiosResponse<API.ApiResponse<BankResponseType>>> => {\n  return API.get(`/ms-admin-rest/api/v1.0/banks/${cbuPrefix}`);\n};\nexport const getProvinces = (): Promise<\n  AxiosResponse<DetailPickersProvincesApiResponseType>\n> => API.get(`/ms-admin-rest/api/v1.0/provinces`);\n"]},"metadata":{},"sourceType":"module"}