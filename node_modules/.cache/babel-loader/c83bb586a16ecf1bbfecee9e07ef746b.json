{"ast":null,"code":"import { replace } from \"connected-react-router\";\nimport i18next from \"i18next\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport * as loginMiddleware from \"../middleware/login\";\nimport { actions } from \"../reducers/login\";\nimport { actions as notificationActions } from \"../reducers/notification\";\nimport { removeItem, saveValue } from \"../utils/localStorage\";\nconst sagas = [takeLatest(actions.getLoginRequest.type, getLogin), takeLatest(actions.logout.type, logout), takeLatest(actions.getLoginEmailRequest.type, getLoginEmail), takeLatest(actions.getLoginRestoreRequest.type, getLoginRestore)];\nexport default sagas;\n\nfunction* getLogin(_ref) {\n  let {\n    payload\n  } = _ref;\n  const response = yield call(loginMiddleware.getLogin, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getLoginError());\n\n    switch (response.data.statusCode) {\n      case 400:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"global:title.modal.connectionError\"),\n          body: i18next.t(\"global:label.modal.connectionError\")\n        }));\n        break;\n\n      case 10005:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"login:title.modal.invalid\"),\n          body: i18next.t(\"login:label.modal.invalid\")\n        }));\n        break;\n\n      case 403:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"login:title.modal.invalid\"),\n          body: i18next.t(\"login:label.modal.invalid\")\n        }));\n        break;\n\n      default:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"global:title.modal.serverError\"),\n          body: i18next.t(\"global:label.modal.serverError\")\n        }));\n        break;\n    }\n  } else {\n    const {\n      result\n    } = response.data;\n    yield call(loginMiddleware.setAuthToken, result.accessToken);\n    saveValue(\"token\", result.accessToken);\n    yield put(replace(\"/dashboard\"));\n    yield put(actions.getLoginSuccess());\n  }\n}\n\nfunction* logout() {\n  removeItem(\"token\");\n  yield put(replace(\"/\"));\n}\n\nfunction* getLoginEmail(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  const response = yield call(loginMiddleware.getLoginEmail, payload);\n\n  if (response.status !== 200) {\n    switch (response.data.statusCode) {\n      case 400:\n        yield put(notificationActions.showNotification({\n          level: \"warning\",\n          title: i18next.t(\"login:title.modal.restore\"),\n          body: i18next.t(\"login:label.modal.restore\")\n        }));\n        break;\n\n      case 403:\n        yield put(notificationActions.showNotification({\n          level: \"warning\",\n          title: i18next.t(\"login:title.modal.restore\"),\n          body: i18next.t(\"login:label.modal.restore\")\n        }));\n        break;\n\n      case 404:\n        yield put(notificationActions.showNotification({\n          level: \"warning\",\n          title: i18next.t(\"login:title.modal.restore\"),\n          body: i18next.t(\"login:label.modal.restore\")\n        }));\n        break;\n\n      default:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"global:title.modal.serverError\"),\n          body: i18next.t(\"global:label.modal.serverError\")\n        }));\n        break;\n    }\n\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginEmailError());\n  } else {\n    yield put(notificationActions.showNotification({\n      level: \"warning\",\n      title: i18next.t(\"login:title.modal.restore\"),\n      body: i18next.t(\"login:label.modal.restore\")\n    }));\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginEmailSuccess());\n  }\n}\n\nfunction* getLoginRestore(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  const response = yield call(loginMiddleware.getLoginRestore, payload);\n\n  if (response.status !== 200) {\n    switch (response.data.statusCode) {\n      case 10003:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"login:title.modal.expiredCode\"),\n          body: i18next.t(\"login:label.modal.expiredCode\")\n        }));\n        break;\n\n      default:\n        yield put(notificationActions.showNotification({\n          level: \"error\",\n          title: i18next.t(\"global:title.modal.serverError\"),\n          body: i18next.t(\"global:label.modal.serverError\")\n        }));\n        break;\n    }\n\n    yield put(actions.getLoginREstoreError());\n  } else {\n    yield put(notificationActions.showNotification({\n      level: \"success\",\n      title: i18next.t(\"login:title.modal.successfulRestore\"),\n      body: i18next.t(\"login:label.modal.successfulRestore\")\n    }));\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginRestoreSuccess());\n  }\n}","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/sagas/login.ts"],"names":["replace","i18next","call","put","takeLatest","loginMiddleware","actions","notificationActions","removeItem","saveValue","sagas","getLoginRequest","type","getLogin","logout","getLoginEmailRequest","getLoginEmail","getLoginRestoreRequest","getLoginRestore","payload","response","status","getLoginError","data","statusCode","showNotification","level","title","t","body","result","setAuthToken","accessToken","getLoginSuccess","getLoginEmailError","getLoginEmailSuccess","getLoginREstoreError","getLoginRestoreSuccess"],"mappings":"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","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { AxiosResponse } from \"axios\";\nimport { CallHistoryMethodAction, replace } from \"connected-react-router\";\nimport i18next from \"i18next\";\nimport { LoginType } from \"pages/login/types\";\nimport { RestorePasswordActionsTypes } from \"reducers/types/login\";\nimport { NotificationStateType } from \"reducers/types/notification\";\nimport {\n  call,\n  CallEffect,\n  ForkEffect,\n  put,\n  PutEffect,\n  takeLatest,\n} from \"redux-saga/effects\";\nimport * as loginMiddleware from \"../middleware/login\";\nimport { actions } from \"../reducers/login\";\nimport { actions as notificationActions } from \"../reducers/notification\";\nimport { removeItem, saveValue } from \"../utils/localStorage\";\nimport {\n  EmailType,\n  ILoginResponse,\n  LoginEmailTypeResponse,\n  RestoreEmailResponse,\n} from \"./types/login\";\n\nconst sagas: ForkEffect<never>[] = [\n  takeLatest(actions.getLoginRequest.type, getLogin),\n  takeLatest(actions.logout.type, logout),\n  takeLatest(actions.getLoginEmailRequest.type, getLoginEmail),\n  takeLatest(actions.getLoginRestoreRequest.type, getLoginRestore),\n];\n\nexport default sagas;\n\nfunction* getLogin({\n  payload,\n}: PayloadAction<LoginType>): Generator<\n  | CallEffect<AxiosResponse<ILoginResponse>>\n  | PutEffect<{ type: string; content: any }>\n  | PutEffect<{ type: string }>\n  | CallEffect<void>,\n  void,\n  ILoginResponse\n> {\n  const response = yield call(loginMiddleware.getLogin, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getLoginError());\n    switch (response.data.statusCode) {\n      case 400:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"global:title.modal.connectionError\"),\n            body: i18next.t(\"global:label.modal.connectionError\"),\n          })\n        );\n        break;\n      case 10005:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"login:title.modal.invalid\"),\n            body: i18next.t(\"login:label.modal.invalid\"),\n          })\n        );\n        break;\n      case 403:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"login:title.modal.invalid\"),\n            body: i18next.t(\"login:label.modal.invalid\"),\n          })\n        );\n        break;\n      default:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"global:title.modal.serverError\"),\n            body: i18next.t(\"global:label.modal.serverError\"),\n          })\n        );\n        break;\n    }\n  } else {\n    const { result } = response.data;\n    yield call(loginMiddleware.setAuthToken, result.accessToken);\n    saveValue(\"token\", result.accessToken);\n    yield put(replace(\"/dashboard\"));\n    yield put(actions.getLoginSuccess());\n  }\n}\n\nfunction* logout(): Generator<\n  PutEffect<CallHistoryMethodAction<[string, unknown?]>>,\n  void,\n  void\n> {\n  removeItem(\"token\");\n  yield put(replace(\"/\"));\n}\n\nfunction* getLoginEmail({\n  payload,\n}: PayloadAction<EmailType>): Generator<\n  | PutEffect<{ payload: NotificationStateType; type: string }>\n  | PutEffect<{ payload: undefined; type: string }>\n  | CallEffect<AxiosResponse<LoginEmailTypeResponse>>\n  | PutEffect<CallHistoryMethodAction<[string, unknown?]>>,\n  void,\n  ILoginResponse\n> {\n  const response = yield call(loginMiddleware.getLoginEmail, payload);\n\n  if (response.status !== 200) {\n    switch (response.data.statusCode) {\n      case 400:\n        yield put(\n          notificationActions.showNotification({\n            level: \"warning\",\n            title: i18next.t(\"login:title.modal.restore\"),\n            body: i18next.t(\"login:label.modal.restore\"),\n          })\n        );\n        break;\n      case 403:\n        yield put(\n          notificationActions.showNotification({\n            level: \"warning\",\n            title: i18next.t(\"login:title.modal.restore\"),\n            body: i18next.t(\"login:label.modal.restore\"),\n          })\n        );\n        break;\n      case 404:\n        yield put(\n          notificationActions.showNotification({\n            level: \"warning\",\n            title: i18next.t(\"login:title.modal.restore\"),\n            body: i18next.t(\"login:label.modal.restore\"),\n          })\n        );\n        break;\n      default:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"global:title.modal.serverError\"),\n            body: i18next.t(\"global:label.modal.serverError\"),\n          })\n        );\n        break;\n    }\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginEmailError());\n  } else {\n    yield put(\n      notificationActions.showNotification({\n        level: \"warning\",\n        title: i18next.t(\"login:title.modal.restore\"),\n        body: i18next.t(\"login:label.modal.restore\"),\n      })\n    );\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginEmailSuccess());\n  }\n}\n\nfunction* getLoginRestore({\n  payload,\n}: PayloadAction<RestorePasswordActionsTypes>): Generator<\n  | PutEffect<{ payload: undefined; type: string }>\n  | PutEffect<{ payload: NotificationStateType; type: string }>\n  | CallEffect<AxiosResponse<RestoreEmailResponse>>\n  | PutEffect<CallHistoryMethodAction<[string, unknown?]>>,\n  void,\n  ILoginResponse\n> {\n  const response = yield call(loginMiddleware.getLoginRestore, payload);\n\n  if (response.status !== 200) {\n    switch (response.data.statusCode) {\n      case 10003:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"login:title.modal.expiredCode\"),\n            body: i18next.t(\"login:label.modal.expiredCode\"),\n          })\n        );\n        break;\n      default:\n        yield put(\n          notificationActions.showNotification({\n            level: \"error\",\n            title: i18next.t(\"global:title.modal.serverError\"),\n            body: i18next.t(\"global:label.modal.serverError\"),\n          })\n        );\n        break;\n    }\n    yield put(actions.getLoginREstoreError());\n  } else {\n    yield put(\n      notificationActions.showNotification({\n        level: \"success\",\n        title: i18next.t(\"login:title.modal.successfulRestore\"),\n        body: i18next.t(\"login:label.modal.successfulRestore\"),\n      })\n    );\n    yield put(replace(\"/\"));\n    yield put(actions.getLoginRestoreSuccess());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}