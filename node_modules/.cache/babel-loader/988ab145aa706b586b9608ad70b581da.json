{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/preliquidation/DetailPreliquidation/WrapperPreliquidationContainer.tsx\";\nimport { connect } from \"react-redux\";\nimport { WrapperPreliquidation } from \"./WrapperPreliquidation\";\nimport { preliquidationSelector, actions } from \"reducers/preliquidation\";\nimport { actions as notificationActions } from \"reducers/notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WrapperPreliquidationContainer = props => {\n  console.log(props.actualPage);\n  console.log(\"props\", props);\n  return /*#__PURE__*/_jsxDEV(WrapperPreliquidation, { ...props,\n    actualPage: props.actualPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = WrapperPreliquidationContainer;\n\nconst mapStateToProps = state => ({\n  isFetching: preliquidationSelector(state).fetching,\n  actualPage: preliquidationSelector(state).actualPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showNotification: content => {\n    dispatch(notificationActions.showNotification(content));\n  },\n  setActualPage: page => {\n    dispatch(actions.setActualPage(page));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrapperPreliquidationContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WrapperPreliquidationContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/preliquidation/DetailPreliquidation/WrapperPreliquidationContainer.tsx"],"names":["connect","WrapperPreliquidation","preliquidationSelector","actions","notificationActions","WrapperPreliquidationContainer","props","console","log","actualPage","mapStateToProps","state","isFetching","fetching","mapDispatchToProps","dispatch","showNotification","content","setActualPage","page"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,SAASC,sBAAT,EAAgCC,OAAhC,QAA+C,yBAA/C;AAEA,SAASA,OAAO,IAAIC,mBAApB,QAA+C,uBAA/C;;AAEA,OAAO,MAAMC,8BAA8B,GACzCC,KAD4C,IAE5B;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACA,sBACE,QAAC,qBAAD,OACMA,KADN;AAGE,IAAA,UAAU,EAAEA,KAAK,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZM;KAAMJ,8B;;AAcb,MAAMK,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,UAAU,EAAEV,sBAAsB,CAACS,KAAD,CAAtB,CAA8BE,QADG;AAE7CJ,EAAAA,UAAU,EAAEP,sBAAsB,CAACS,KAAD,CAAtB,CAA8BF;AAFG,CAAvB,CAAxB;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,KAA4B;AACrDC,EAAAA,gBAAgB,EAAGC,OAAD,IAAoC;AACpDF,IAAAA,QAAQ,CAACX,mBAAmB,CAACY,gBAApB,CAAqCC,OAArC,CAAD,CAAR;AACD,GAHoD;AAIrDC,EAAAA,aAAa,EAAGC,IAAD,IAAkB;AAC/BJ,IAAAA,QAAQ,CAACZ,OAAO,CAACe,aAAR,CAAsBC,IAAtB,CAAD,CAAR;AACD;AANoD,CAA5B,CAA3B;;AAQA,eAAenB,OAAO,CACpBU,eADoB,EAEpBI,kBAFoB,CAAP,CAGbT,8BAHa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { AppDispatch, RootState } from \"store\";\nimport { WrapperPreliquidation } from \"./WrapperPreliquidation\";\nimport { WrapperPreliquidationContainerPropsType } from \"./types\";\nimport { preliquidationSelector,actions } from \"reducers/preliquidation\";\nimport { NotificationStateType } from \"reducers/types/notification\";\nimport { actions as notificationActions } from \"reducers/notification\";\n\nexport const WrapperPreliquidationContainer = (\n  props: WrapperPreliquidationContainerPropsType\n): JSX.Element => {\n  console.log(props.actualPage)\n  console.log(\"props\",props)\n  return (\n    <WrapperPreliquidation\n      {...props}\n\n      actualPage={props.actualPage}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isFetching: preliquidationSelector(state).fetching,\n  actualPage: preliquidationSelector(state).actualPage,\n\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  showNotification: (content: NotificationStateType) => {\n    dispatch(notificationActions.showNotification(content));\n  },\n  setActualPage: (page: string) => {\n    dispatch(actions.setActualPage(page));\n  },\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrapperPreliquidationContainer);\n"]},"metadata":{},"sourceType":"module"}