{"ast":null,"code":"import { createSlice, createSelector } from \"@reduxjs/toolkit\";\nimport { endsWithAny } from \"utils/endsWithAny\";\nexport const initialState = {\n  fetching: false,\n  invoiceFileStatus: {\n    error: false,\n    loading: false,\n    message: \"\"\n  },\n  preliquidations: [],\n  dirty: false,\n  preliquidationsSelected: [],\n  filters: {},\n  filtersExtra: {\n    limit: 3,\n    offset: 0\n  },\n  filtersExtraSeeMore: {\n    limit: 3,\n    offset: 0\n  },\n  seeMore: true,\n  actualPage: \"\",\n  invoiceTypes: [],\n  detailPreliquidations: {\n    id: 0,\n    status: {\n      id: 0,\n      description: \"\",\n      tag: \"\"\n    },\n    generatedAt: \"\"\n  },\n  invoiceDetail: {\n    id: 0,\n    emisionDate: \"\",\n    invoiceNumber: \"\",\n    salePoint: \"\",\n    invoiceType: {\n      name: \"\",\n      tag: \"\"\n    },\n    caeNumber: \"\",\n    fiscalData: {\n      fiscalNumber: \"\",\n      companyName: \"\",\n      taxPayerType: \"\",\n      total: 0\n    },\n    invoiceFile: {\n      upload: false,\n      url: null\n    },\n    presettementId: undefined\n  }\n};\nconst SLICE_NAME = \"preliquidation\";\n\nconst isRequestAction = action => {\n  const {\n    type\n  } = action;\n  return type.startsWith(SLICE_NAME) && type.endsWith(\"Request\");\n};\n\nconst isResponseAction = action => {\n  const {\n    type\n  } = action;\n  return type.startsWith(SLICE_NAME) && endsWithAny(type, [\"Error\", \"Success\"]);\n};\n\nexport const preliquidationSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    reset: state => {\n      state = { ...initialState\n      };\n    },\n    getPreliquidationsRequest: (state, action) => {},\n    getMorePreliquidationsRequest: (state, action) => {},\n    getPreliquidationsSuccess: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.preliquidations = payload.result.items;\n      state.seeMore = payload.hasMore;\n      state.filtersExtraSeeMore.offset = payload.offset + payload.limit;\n    },\n    getMorePreliquidationsSuccess: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.preliquidations = [...state.preliquidations, ...payload.items];\n      state.seeMore = payload.hasMore;\n      state.filtersExtraSeeMore.offset = payload.offset + payload.limit;\n    },\n    getPreliquidationsError: () => {},\n    getMorePreliquidationsError: () => {},\n    setPreliquidationFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPreliquidationExtraFilters: (state, action) => {\n      state.filtersExtra = { ...state.filtersExtra,\n        ...action.payload\n      };\n    },\n    getInvoiceDetailRequest: (state, action) => {},\n    getInvoiceDetailError: () => {},\n    getInvoiceDetailSuccess: (state, action) => {\n      const {\n        payload\n      } = action;\n      const {\n        presettlement,\n        ...invoice\n      } = payload;\n      state.invoiceDetail = invoice;\n      state.detailPreliquidations = { ...state.detailPreliquidations,\n        ...presettlement\n      };\n    },\n    getInvoiceDetailSaveRequest: (state, action) => {},\n    getInvoiceDetailSaveError: () => {},\n    getInvoiceDetailSaveSuccess: () => {},\n    getInvoiceDetailApproveRequest: (state, action) => {},\n    getInvoiceDetailApproveError: () => {},\n    getInvoiceDetailApproveSuccess: () => {},\n    getInvoiceDetailDeleteRequest: (state, action) => {},\n    getInvoiceDetailDeleteError: () => {},\n    getInvoiceDetailDeleteSuccess: () => {},\n    uploadInvoiceFile: (state, action) => {},\n    uploadInvoiceFileError: state => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: true,\n        message: \"component:label.pdfController.serverError\"\n      };\n    },\n    uploadInvoiceFileSuccess: (state, action) => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: false,\n        message: \"\"\n      };\n      state.invoiceDetail.invoiceFile = {\n        upload: true,\n        url: action.payload\n      };\n    },\n    deleteInvoiceFileRequest: (state, action) => {},\n    deleteInvoiceFileError: state => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: true,\n        message: \"component:label.pdfController.serverError\"\n      };\n    },\n    deleteInvoiceFileSuccess: state => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: false,\n        message: \"\"\n      };\n      state.invoiceDetail.invoiceFile = {\n        upload: false,\n        url: null\n      };\n    },\n    getInvoiceDetailTypesRequest: () => {},\n    getInvoiceDetailTypesError: () => {},\n    getInvoiceDetailTypesSuccess: (state, action) => {\n      const {\n        payload\n      } = action;\n      state.invoiceTypes = payload;\n    },\n    setDirty: (state, action) => {\n      state.dirty = action.payload;\n    },\n    setInvoiceFileStatus: (state, action) => {\n      state.invoiceFileStatus = { ...state.invoiceFileStatus,\n        ...action.payload\n      };\n    },\n    setActualPage: (state, action) => {\n      state.actualPage = action.payload;\n    },\n    toggleItem: (state, action) => {\n      const item = action.payload;\n      const idx = state.preliquidationsSelected.findIndex(p => p.id === item.id);\n      if (idx >= 0) state.preliquidationsSelected.splice(idx, 1);else state.preliquidationsSelected.push(item);\n    },\n    toggleAll: state => {\n      const approvedItems = state.preliquidations.filter(p => p.status.tag === \"approved\"); // Estan todas las preli seleccionadas\n\n      if (approvedItems.length === state.preliquidationsSelected.length) state.preliquidationsSelected = [];else state.preliquidationsSelected = approvedItems;\n    }\n  },\n  extraReducers: builder => builder.addMatcher(isRequestAction, state => {\n    state.fetching = true;\n  }).addMatcher(isResponseAction, state => {\n    state.fetching = false;\n  })\n});\nexport const preliquidationSelector = state => state.preliquidations;\nexport const actions = preliquidationSlice.actions;\nexport const allPreliquidationsSelected = createSelector(state => state.preliquidations, preli => preli.preliquidationsSelected.length > 0 && preli.preliquidations.filter(p => p.status.tag === \"approved\").length === preli.preliquidationsSelected.length);\nexport default preliquidationSlice.reducer;","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/reducers/preliquidation.ts"],"names":["createSlice","createSelector","endsWithAny","initialState","fetching","invoiceFileStatus","error","loading","message","preliquidations","dirty","preliquidationsSelected","filters","filtersExtra","limit","offset","filtersExtraSeeMore","seeMore","actualPage","invoiceTypes","detailPreliquidations","id","status","description","tag","generatedAt","invoiceDetail","emisionDate","invoiceNumber","salePoint","invoiceType","name","caeNumber","fiscalData","fiscalNumber","companyName","taxPayerType","total","invoiceFile","upload","url","presettementId","undefined","SLICE_NAME","isRequestAction","action","type","startsWith","endsWith","isResponseAction","preliquidationSlice","reducers","reset","state","getPreliquidationsRequest","getMorePreliquidationsRequest","getPreliquidationsSuccess","payload","result","items","hasMore","getMorePreliquidationsSuccess","getPreliquidationsError","getMorePreliquidationsError","setPreliquidationFilters","setPreliquidationExtraFilters","getInvoiceDetailRequest","getInvoiceDetailError","getInvoiceDetailSuccess","presettlement","invoice","getInvoiceDetailSaveRequest","getInvoiceDetailSaveError","getInvoiceDetailSaveSuccess","getInvoiceDetailApproveRequest","getInvoiceDetailApproveError","getInvoiceDetailApproveSuccess","getInvoiceDetailDeleteRequest","getInvoiceDetailDeleteError","getInvoiceDetailDeleteSuccess","uploadInvoiceFile","uploadInvoiceFileError","uploadInvoiceFileSuccess","deleteInvoiceFileRequest","deleteInvoiceFileError","deleteInvoiceFileSuccess","getInvoiceDetailTypesRequest","getInvoiceDetailTypesError","getInvoiceDetailTypesSuccess","setDirty","setInvoiceFileStatus","setActualPage","toggleItem","item","idx","findIndex","p","splice","push","toggleAll","approvedItems","filter","length","extraReducers","builder","addMatcher","preliquidationSelector","actions","allPreliquidationsSelected","preli","reducer"],"mappings":"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","sourcesContent":["import {\n  Action,\n  createSlice,\n  PayloadAction,\n  createSelector,\n} from \"@reduxjs/toolkit\";\nimport { PreliquidationFilterExtraType, PreliquidationFiltersType } from \"pages/preliquidation/filter/types\";\nimport {\n  DetailPreliquidationsContentResponseType,\n  InvoiceTypes,\n  PreliquidationItem,\n  PreliquidationParamsMiddlewareType,\n  PreliquidationsContentResponseType,\n} from \"sagas/types/preliquidation\";\nimport { RootState } from \"store\";\nimport { endsWithAny } from \"utils/endsWithAny\";\nimport {\n  InvoiceFileStatus,\n  PreliquidationsSuccessMoreResponseType,\n  PreliquitadionStateType,\n} from \"./types/preliquidation\";\n\nexport const initialState: PreliquitadionStateType = {\n  fetching: false,\n  invoiceFileStatus: {\n    error: false,\n    loading: false,\n    message: \"\",\n  },\n  preliquidations: [],\n  dirty: false,\n  preliquidationsSelected: [],\n  filters: {},\n  filtersExtra: {\n    limit: 3,\n    offset: 0\n  },\n  filtersExtraSeeMore: {\n    limit: 3,\n    offset: 0\n  },\n  seeMore: true,\n\n  actualPage: \"\",\n  invoiceTypes: [],\n  detailPreliquidations: {\n    id: 0,\n    status: {\n      id: 0,\n      description: \"\",\n      tag: \"\"\n    },\n    generatedAt: \"\",\n  },\n  invoiceDetail: {\n    id: 0,\n    emisionDate: \"\",\n    invoiceNumber: \"\",\n    salePoint: \"\",\n    invoiceType: {\n      name: \"\",\n      tag: \"\",\n    },\n    caeNumber: \"\",\n    fiscalData: {\n      fiscalNumber: \"\",\n      companyName: \"\",\n      taxPayerType: \"\",\n      total: 0,\n    },\n    invoiceFile: {\n      upload: false,\n      url: null,\n    },\n    presettementId: undefined\n  },\n\n};\n\nconst SLICE_NAME = \"preliquidation\";\n\nconst isRequestAction = (action: Action<string>) => {\n  const { type } = action;\n  return type.startsWith(SLICE_NAME) && type.endsWith(\"Request\");\n};\n\nconst isResponseAction = (action: Action<string>) => {\n  const { type } = action;\n  return type.startsWith(SLICE_NAME) && endsWithAny(type, [\"Error\", \"Success\"]);\n};\n\nexport const preliquidationSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    reset: (state: PreliquitadionStateType) => {\n      state = {\n        ...initialState,\n      };\n    },\n    getPreliquidationsRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationParamsMiddlewareType>\n    ) => {\n\n    },\n    getMorePreliquidationsRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationParamsMiddlewareType>\n    ) => {},\n    getPreliquidationsSuccess: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationsContentResponseType>\n    ) => {\n      const { payload } = action;\n      \n      state.preliquidations = payload.result.items;\n      state.seeMore = payload.hasMore;\n      state.filtersExtraSeeMore.offset = payload.offset + payload.limit;\n\n    },\n    getMorePreliquidationsSuccess: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationsSuccessMoreResponseType>\n    ) => {\n      const { payload } = action;\n      state.preliquidations = [...state.preliquidations, ...payload.items];\n      state.seeMore = payload.hasMore;\n      state.filtersExtraSeeMore.offset = payload.offset + payload.limit;\n\n    },\n    getPreliquidationsError: () => {},\n    getMorePreliquidationsError: () => {},\n    setPreliquidationFilters: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationFiltersType>\n    ) => {\n      state.filters = action.payload;\n    },\n    setPreliquidationExtraFilters: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationFilterExtraType>\n    ) => {\n\n      state.filtersExtra = { ...state.filtersExtra, ...action.payload };\n    },\n\n    getInvoiceDetailRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<string | undefined>\n    ) => {},\n    getInvoiceDetailError: () => {},\n    getInvoiceDetailSuccess: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<DetailPreliquidationsContentResponseType>\n    ) => {\n      const { payload } = action;\n      const { presettlement, ...invoice } = payload;\n      state.invoiceDetail = invoice;\n      state.detailPreliquidations = {\n        ...state.detailPreliquidations,\n        ...presettlement,\n      };\n    },\n    getInvoiceDetailSaveRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<{}>\n    ) => {},\n    getInvoiceDetailSaveError: () => {},\n    getInvoiceDetailSaveSuccess: () => {},\n    getInvoiceDetailApproveRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<{}>\n    ) => {},\n    getInvoiceDetailApproveError: () => {},\n    getInvoiceDetailApproveSuccess: () => {},\n    getInvoiceDetailDeleteRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<{}>\n    ) => {},\n    getInvoiceDetailDeleteError: () => {},\n    getInvoiceDetailDeleteSuccess: () => {},\n    uploadInvoiceFile: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<{ id: number; content: string }>\n    ) => {},\n    uploadInvoiceFileError: (state: PreliquitadionStateType) => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: true,\n        message: \"component:label.pdfController.serverError\",\n      };\n    },\n    uploadInvoiceFileSuccess: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<string>\n    ) => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: false,\n        message: \"\",\n      };\n      state.invoiceDetail.invoiceFile = {\n        upload: true,\n        url: action.payload,\n      };\n    },\n    deleteInvoiceFileRequest: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<{ id: number }>\n    ) => {},\n    deleteInvoiceFileError: (state: PreliquitadionStateType) => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: true,\n        message: \"component:label.pdfController.serverError\",\n      };\n    },\n    deleteInvoiceFileSuccess: (state: PreliquitadionStateType) => {\n      state.invoiceFileStatus = {\n        loading: false,\n        error: false,\n        message: \"\",\n      };\n      state.invoiceDetail.invoiceFile = {\n        upload: false,\n        url: null,\n      };\n    },\n\n    getInvoiceDetailTypesRequest: () => {},\n    getInvoiceDetailTypesError: () => {},\n    getInvoiceDetailTypesSuccess: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<InvoiceTypes[]>\n    ) => {\n      const { payload } = action;\n      state.invoiceTypes = payload;\n    },\n\n    setDirty: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.dirty = action.payload;\n    },\n    setInvoiceFileStatus: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<InvoiceFileStatus>\n    ) => {\n      state.invoiceFileStatus = {\n        ...state.invoiceFileStatus,\n        ...action.payload,\n      };\n    },\n    setActualPage: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<string>\n    ) => {\n      state.actualPage = action.payload;\n    },\n\n    toggleItem: (\n      state: PreliquitadionStateType,\n      action: PayloadAction<PreliquidationItem>\n    ) => {\n      const item = action.payload;\n      const idx = state.preliquidationsSelected.findIndex(\n        (p) => p.id === item.id\n      );\n\n      if (idx >= 0) state.preliquidationsSelected.splice(idx, 1);\n      else state.preliquidationsSelected.push(item);\n    },\n    toggleAll: (state: PreliquitadionStateType) => {\n      const approvedItems = state.preliquidations.filter(\n        (p) => p.status.tag === \"approved\"\n      );\n      // Estan todas las preli seleccionadas\n      if (approvedItems.length === state.preliquidationsSelected.length)\n        state.preliquidationsSelected = [];\n      else state.preliquidationsSelected = approvedItems;\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addMatcher(isRequestAction, (state: PreliquitadionStateType) => {\n        state.fetching = true;\n      })\n      .addMatcher(isResponseAction, (state: PreliquitadionStateType) => {\n        state.fetching = false;\n      }),\n});\n\nexport const preliquidationSelector = (state: RootState) =>\n  state.preliquidations;\n\nexport const actions = preliquidationSlice.actions;\n\nexport const allPreliquidationsSelected = createSelector(\n  (state: RootState) => state.preliquidations,\n  (preli) =>\n    preli.preliquidationsSelected.length > 0 &&\n    preli.preliquidations.filter((p) => p.status.tag === \"approved\").length ===\n      preli.preliquidationsSelected.length\n);\n\nexport default preliquidationSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}