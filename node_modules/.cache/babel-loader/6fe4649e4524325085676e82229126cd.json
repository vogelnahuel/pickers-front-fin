{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/pickers-admin-front/src/pages/dashboard/DashboardAdminContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as dashboardActions, dashboardSelector } from \"reducers/dashboard\";\nimport { DashboardAdmin } from \"./DashboardAdmin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardContainer = props => {\n  _s();\n\n  useEffect(() => {\n    props.getDashboard(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardAdmin, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DashboardContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DashboardContainer;\n\nconst mapStateToProps = state => ({\n  dashboard: dashboardSelector(state).dashboard,\n  isFetching: dashboardSelector(state).fetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDashboard: () => {\n    dispatch(dashboardActions.getDashboardRequest());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardContainer\");","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/pages/dashboard/DashboardAdminContainer.tsx"],"names":["useEffect","connect","actions","dashboardActions","dashboardSelector","DashboardAdmin","DashboardContainer","props","getDashboard","mapStateToProps","state","dashboard","isFetching","fetching","mapDispatchToProps","dispatch","getDashboardRequest"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,OAAO,IAAIC,gBADb,EAEEC,iBAFF,QAGO,oBAHP;AAKA,SAASC,cAAT,QAA+B,kBAA/B;;;AAGA,MAAMC,kBAAkB,GAAIC,KAAD,IAAiD;AAAA;;AAC1EP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACC,YAAN,GADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,QAAC,cAAD,OAAoBD;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;;GAAMD,kB;;KAAAA,kB;;AASN,MAAMG,eAAe,GAAIC,KAAD,KAAuB;AAC7CC,EAAAA,SAAS,EAAEP,iBAAiB,CAACM,KAAD,CAAjB,CAAyBC,SADS;AAE7CC,EAAAA,UAAU,EAAER,iBAAiB,CAACM,KAAD,CAAjB,CAAyBG;AAFQ,CAAvB,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAA4B;AACrDP,EAAAA,YAAY,EAAE,MAAM;AAClBO,IAAAA,QAAQ,CAACZ,gBAAgB,CAACa,mBAAjB,EAAD,CAAR;AACD;AAHoD,CAA5B,CAA3B;;AAMA,eAAef,OAAO,CAACQ,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CR,kBAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  actions as dashboardActions,\n  dashboardSelector\n} from \"reducers/dashboard\";\nimport { AppDispatch, RootState } from \"store\";\nimport { DashboardAdmin } from \"./DashboardAdmin\";\nimport { DashboardContainerTypes } from \"./types\";\n\nconst DashboardContainer = (props: DashboardContainerTypes): JSX.Element => {\n  useEffect(() => {\n    props.getDashboard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <DashboardAdmin {...props} />;\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  dashboard: dashboardSelector(state).dashboard,\n  isFetching: dashboardSelector(state).fetching,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  getDashboard: () => {\n    dispatch(dashboardActions.getDashboardRequest());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n"]},"metadata":{},"sourceType":"module"}