{"ast":null,"code":"import * as transactionsMiddleware from \"middleware/transactions\";\nimport { actions } from \"reducers/detailTransaction\";\nimport { actions as transactionActions } from \"reducers/transactions\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nconst sagas = [takeLatest(actions.getDetailTransactionRequest.type, getDetailTransaction), takeLatest(actions.getDetailTransactionMenssagesRequest.type, getMessages), takeLatest(actions.getDetailTransactionDevolutionUndeliveredRequest.type, postDevolutionUndelivered), takeLatest(actions.getDetailTransactionReasonsCanceledRequest.type, postReasonsCanceled), takeLatest(actions.getDetailTransactionFinishReturnedRequest.type, postFinishReturned), takeLatest(actions.getDetailTransactionFinishLostRequest.type, postFinishLost), takeLatest(actions.getDetailTransactionDniDeliveredRequest.type, postDnidelivered)];\n\nfunction* getDetailTransaction(_ref) {\n  let {\n    payload\n  } = _ref;\n  const response = yield call(transactionsMiddleware.getDetailTransaction, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionError());\n  } else {\n    const {\n      result\n    } = response.data;\n    yield put(actions.getDetailTransactionSuccess(result));\n  }\n}\n\nfunction* getMessages(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  const response = yield call(transactionsMiddleware.getMessages, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionMenssagesError());\n  } else {\n    const {\n      result\n    } = response.data;\n    yield put(actions.getDetailTransactionMenssagesSuccess(result.items));\n  }\n}\n\nfunction* postDevolutionUndelivered(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  const paramsPost = {\n    impossibleDeliveryReasonId: Number(payload.params)\n  };\n  const response = yield call(transactionsMiddleware.postDevolutionUndelivered, paramsPost, payload.id);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionDevolutionUndeliveredError());\n  } else {\n    yield put(transactionActions.getDetailTransactionDevolutionUndeliveredSuccess());\n  }\n}\n\nfunction* postReasonsCanceled(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  const paramsPost = {\n    cancellationReasonId: parseInt(payload.params + \"\")\n  };\n  const response = yield call(transactionsMiddleware.postReasonsCanceled, paramsPost, payload.id);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionReasonsCanceledError());\n  } else {\n    yield window.location.reload();\n    yield put(transactionActions.getDetailTransactionReasonsCanceledSuccess());\n  }\n}\n\nfunction* postFinishReturned(_ref5) {\n  let {\n    payload\n  } = _ref5;\n  const response = yield call(transactionsMiddleware.postFinishReturned, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionFinishReturnedError());\n  } else {\n    yield put(transactionActions.getDetailTransactionFinishReturnedSuccess());\n  }\n}\n\nfunction* postFinishLost(_ref6) {\n  let {\n    payload\n  } = _ref6;\n  const response = yield call(transactionsMiddleware.postFinishLost, payload);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionFinishLostError());\n  } else {\n    yield put(transactionActions.getDetailTransactionFinishLostSuccess());\n  }\n}\n\nfunction* postDnidelivered(_ref7) {\n  let {\n    payload\n  } = _ref7;\n  const response = yield call(transactionsMiddleware.postDnidelivered, payload.params, payload.id);\n\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionDniDeliveredError());\n  } else {\n    yield put(transactionActions.getDetailTransactionDniDeliveredSuccess());\n  }\n}\n\nexport default sagas;","map":{"version":3,"sources":["/home/nahuel/pickers-admin-front/src/sagas/detailTransaction.ts"],"names":["transactionsMiddleware","actions","transactionActions","call","put","takeLatest","sagas","getDetailTransactionRequest","type","getDetailTransaction","getDetailTransactionMenssagesRequest","getMessages","getDetailTransactionDevolutionUndeliveredRequest","postDevolutionUndelivered","getDetailTransactionReasonsCanceledRequest","postReasonsCanceled","getDetailTransactionFinishReturnedRequest","postFinishReturned","getDetailTransactionFinishLostRequest","postFinishLost","getDetailTransactionDniDeliveredRequest","postDnidelivered","payload","response","status","getDetailTransactionError","result","data","getDetailTransactionSuccess","getDetailTransactionMenssagesError","getDetailTransactionMenssagesSuccess","items","paramsPost","impossibleDeliveryReasonId","Number","params","id","getDetailTransactionDevolutionUndeliveredError","getDetailTransactionDevolutionUndeliveredSuccess","cancellationReasonId","parseInt","getDetailTransactionReasonsCanceledError","window","location","reload","getDetailTransactionReasonsCanceledSuccess","getDetailTransactionFinishReturnedError","getDetailTransactionFinishReturnedSuccess","getDetailTransactionFinishLostError","getDetailTransactionFinishLostSuccess","getDetailTransactionDniDeliveredError","getDetailTransactionDniDeliveredSuccess"],"mappings":"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","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { AxiosResponse } from \"axios\";\nimport * as transactionsMiddleware from \"middleware/transactions\";\nimport { actions } from \"reducers/detailTransaction\";\nimport { actions as transactionActions } from \"reducers/transactions\";\nimport {\n  call, CallEffect, ForkEffect, put, PutEffect, takeLatest\n} from \"redux-saga/effects\";\nimport {\n  DetailTransactionResponseType, DevolutionUndeliveredResponseType,\n  postCancelType, postDevolutionUndeliveredType, postDnideliveredResponseType, TransactionCancelResponseType\n} from \"./types/detailTransactions\";\n\nconst sagas: ForkEffect<never>[] = [\n  takeLatest(actions.getDetailTransactionRequest.type, getDetailTransaction),\n  takeLatest(actions.getDetailTransactionMenssagesRequest.type, getMessages),\n  takeLatest(actions.getDetailTransactionDevolutionUndeliveredRequest.type,\n    postDevolutionUndelivered\n  ),\n  takeLatest(actions.getDetailTransactionReasonsCanceledRequest.type,\n    postReasonsCanceled\n  ),\n  takeLatest(actions.getDetailTransactionFinishReturnedRequest.type,\n    postFinishReturned\n  ),\n  takeLatest(actions.getDetailTransactionFinishLostRequest.type, postFinishLost),\n  takeLatest(actions.getDetailTransactionDniDeliveredRequest.type, postDnidelivered),\n];\n\nfunction* getDetailTransaction({\n  payload,\n}: PayloadAction<string>): Generator<\n  | CallEffect<AxiosResponse<DetailTransactionResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  DetailTransactionResponseType\n> {\n  const response = yield call(transactionsMiddleware.getDetailTransaction, payload);\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionError());\n  } else {\n    const { result } = response.data;\n    yield put(actions.getDetailTransactionSuccess(result));\n  }\n}\n\nfunction* getMessages({\n  payload,\n}: PayloadAction<string>): Generator<\n  | CallEffect<AxiosResponse<TransactionCancelResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  TransactionCancelResponseType\n> {\n  const response = yield call(transactionsMiddleware.getMessages, payload);\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionMenssagesError());\n  } else {\n    const { result } = response.data;\n    yield put(actions.getDetailTransactionMenssagesSuccess(result.items));\n  }\n}\n\nfunction* postDevolutionUndelivered({\n  payload\n}: PayloadAction<{id: string,params: postDevolutionUndeliveredType}>): Generator<\n  | CallEffect<AxiosResponse<DevolutionUndeliveredResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  DevolutionUndeliveredResponseType\n> {\n  const paramsPost: postDevolutionUndeliveredType = {\n    impossibleDeliveryReasonId: Number(payload.params),\n  };\n  const response = yield call(\n    transactionsMiddleware.postDevolutionUndelivered,\n    paramsPost,\n    payload.id\n  );\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionDevolutionUndeliveredError());\n  } else {\n    yield put(transactionActions.getDetailTransactionDevolutionUndeliveredSuccess());\n  }\n}\n\nfunction* postReasonsCanceled({\n  payload\n}: PayloadAction<{id: string,params: postCancelType}>): Generator<\n  | CallEffect<AxiosResponse<DevolutionUndeliveredResponseType>>\n  | PutEffect<{ type: string }>\n  | void,\n  void,\n  DevolutionUndeliveredResponseType\n> {\n  const paramsPost: postCancelType = {\n    cancellationReasonId: parseInt(payload.params + \"\"),\n  };\n\n  const response = yield call(\n    transactionsMiddleware.postReasonsCanceled,\n    paramsPost,\n    payload.id\n  );\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionReasonsCanceledError());\n  } else {\n    yield window.location.reload();\n    yield put(transactionActions.getDetailTransactionReasonsCanceledSuccess());\n  }\n}\n\nfunction* postFinishReturned({\n  payload,\n}: PayloadAction<string>): Generator<\n  | CallEffect<AxiosResponse<DevolutionUndeliveredResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  DevolutionUndeliveredResponseType\n> {\n  const response = yield call(transactionsMiddleware.postFinishReturned, payload);\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionFinishReturnedError());\n  } else {\n    yield put(transactionActions.getDetailTransactionFinishReturnedSuccess());\n  }\n}\n\nfunction* postFinishLost({\n  payload,\n}: PayloadAction<string>): Generator<\n  | CallEffect<AxiosResponse<DevolutionUndeliveredResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  DevolutionUndeliveredResponseType\n> {\n  const response = yield call(transactionsMiddleware.postFinishLost, payload);\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionFinishLostError());\n  } else {\n    yield put(transactionActions.getDetailTransactionFinishLostSuccess());\n  }\n}\n\nfunction* postDnidelivered({\n  payload\n}: PayloadAction<{id: string, params: postDnideliveredResponseType}>): Generator<\n  | CallEffect<AxiosResponse<DevolutionUndeliveredResponseType>>\n  | PutEffect<{ type: string }>,\n  void,\n  DevolutionUndeliveredResponseType\n> {\n  const response = yield call(\n    transactionsMiddleware.postDnidelivered,\n    payload.params,\n    payload.id\n  );\n  if (response.status !== 200) {\n    yield put(actions.getDetailTransactionDniDeliveredError());\n  } else {\n    yield put(transactionActions.getDetailTransactionDniDeliveredSuccess());\n  }\n}\n\nexport default sagas;\n"]},"metadata":{},"sourceType":"module"}