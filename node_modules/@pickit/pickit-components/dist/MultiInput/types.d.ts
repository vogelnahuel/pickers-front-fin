import { FieldRenderProps } from 'react-final-form';
import { AxiosResponse } from 'axios';
import { FormApi } from 'final-form';
export interface GenericResponse {
    result: any;
}
export interface MultiInputProps extends FieldRenderProps<any, HTMLInputElement> {
    placeholder: string;
    labeled?: boolean;
    options: any[];
    nameOptionProperty: string;
    idProperty?: string;
    showProperty?: string;
    iconProperty?: string;
    classes?: string[];
    onChangeOption?: (value: any) => void;
    dropDownOnly?: boolean;
    disabled?: boolean;
    readOnly?: boolean;
    t: any;
    form: FormApi;
    testId?: string;
}
export interface AsyncMultiInputProps extends FieldRenderProps<any, HTMLInputElement> {
    placeholder: string;
    idProperty?: string;
    getDefaultOption?: (id: string | number) => Promise<AxiosResponse<GenericResponse>>;
    getOptions: (term: string) => Promise<any>;
    showProperty?: string;
    classes?: string[];
    onChange?: (value: any) => void;
    getFullObject?: boolean;
}
export interface PlacesMultiInputProps extends FieldRenderProps<any, HTMLInputElement> {
    placeholder: string;
    classes?: string[];
    onChange?: (value: any) => void;
}
export interface Highlight {
    id: string;
    index: number;
}
